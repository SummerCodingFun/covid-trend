{"ast":null,"code":"import _slicedToArray from \"/Users/claire/Desktop/covid-trend/RESTool2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/Users/claire/Desktop/covid-trend/RESTool2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/claire/Desktop/covid-trend/RESTool2/src/components/page/page.comp.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport * as QueryString from 'query-string';\nimport { toast } from 'react-toastify';\nimport { orderBy } from 'natural-orderby';\nimport { find, remove } from 'lodash';\nimport { withAppContext } from '../withContext/withContext.comp';\nimport { Loader } from '../loader/loader.comp';\nimport { dataHelpers } from '../../helpers/data.helpers';\nimport { paginationHelpers } from '../../helpers/pagination.helpers';\nimport { Table } from '../table/table.comp';\nimport { Cards } from '../cards/cards.comp';\nimport { QueryParams } from '../queryParams/queryParams.comp';\nimport { Button } from '../button/button.comp';\nimport { FormPopup } from '../formPopup/formPopup.comp';\nimport { FilterField } from '../filterField/filterField.comp';\nimport './page.scss';\n\nconst buildInitQueryParamsAndPaginationState = (initQueryParams, paginationConfig) => {\n  var _paginationConfig$par, _paginationConfig$par2, _paginationConfig$par3, _paginationConfig$par4, _paginationConfig$par5, _paginationConfig$par6, _paginationConfig$par7, _paginationConfig$par8;\n\n  const initialPagination = paginationConfig ? {\n    type: paginationConfig.type,\n    page: parseInt(((_paginationConfig$par = paginationConfig.params) === null || _paginationConfig$par === void 0 ? void 0 : (_paginationConfig$par2 = _paginationConfig$par.page) === null || _paginationConfig$par2 === void 0 ? void 0 : _paginationConfig$par2.value) || '1'),\n    limit: parseInt(((_paginationConfig$par3 = paginationConfig.params) === null || _paginationConfig$par3 === void 0 ? void 0 : (_paginationConfig$par4 = _paginationConfig$par3.limit) === null || _paginationConfig$par4 === void 0 ? void 0 : _paginationConfig$par4.value) || '10'),\n    descending: ((_paginationConfig$par5 = paginationConfig.params) === null || _paginationConfig$par5 === void 0 ? void 0 : (_paginationConfig$par6 = _paginationConfig$par5.descending) === null || _paginationConfig$par6 === void 0 ? void 0 : _paginationConfig$par6.value) === 'true' || false,\n    hasPreviousPage: false,\n    hasNextPage: false,\n    sortBy: (_paginationConfig$par7 = paginationConfig.params) === null || _paginationConfig$par7 === void 0 ? void 0 : (_paginationConfig$par8 = _paginationConfig$par7.sortBy) === null || _paginationConfig$par8 === void 0 ? void 0 : _paginationConfig$par8.value\n  } : undefined;\n\n  if (paginationConfig) {\n    var _paginationConfig$par13, _paginationConfig$par14, _paginationConfig$par15;\n\n    if (!find(initQueryParams, {\n      name: 'page'\n    })) {\n      var _paginationConfig$par9, _paginationConfig$par10, _paginationConfig$par11, _paginationConfig$par12;\n\n      initQueryParams.push({\n        name: paginationConfig === null || paginationConfig === void 0 ? void 0 : (_paginationConfig$par9 = paginationConfig.params) === null || _paginationConfig$par9 === void 0 ? void 0 : (_paginationConfig$par10 = _paginationConfig$par9.page) === null || _paginationConfig$par10 === void 0 ? void 0 : _paginationConfig$par10.name,\n        label: (paginationConfig === null || paginationConfig === void 0 ? void 0 : (_paginationConfig$par11 = paginationConfig.params) === null || _paginationConfig$par11 === void 0 ? void 0 : (_paginationConfig$par12 = _paginationConfig$par11.page) === null || _paginationConfig$par12 === void 0 ? void 0 : _paginationConfig$par12.label) || 'Page',\n        value: initialPagination === null || initialPagination === void 0 ? void 0 : initialPagination.page\n      });\n    }\n\n    if ((paginationConfig === null || paginationConfig === void 0 ? void 0 : (_paginationConfig$par13 = paginationConfig.params) === null || _paginationConfig$par13 === void 0 ? void 0 : _paginationConfig$par13.limit) && !find(initQueryParams, {\n      name: 'limit'\n    })) {\n      initQueryParams.push({\n        name: paginationConfig.params.limit.name,\n        label: paginationConfig.params.limit.label || 'Limit',\n        value: initialPagination === null || initialPagination === void 0 ? void 0 : initialPagination.limit\n      });\n    }\n\n    if ((paginationConfig === null || paginationConfig === void 0 ? void 0 : (_paginationConfig$par14 = paginationConfig.params) === null || _paginationConfig$par14 === void 0 ? void 0 : _paginationConfig$par14.descending) && !find(initQueryParams, {\n      name: 'descending'\n    })) {\n      initQueryParams.push({\n        name: paginationConfig.params.descending.name,\n        label: paginationConfig.params.descending.label || 'Descending',\n        value: initialPagination === null || initialPagination === void 0 ? void 0 : initialPagination.descending\n      });\n    }\n\n    if ((paginationConfig === null || paginationConfig === void 0 ? void 0 : (_paginationConfig$par15 = paginationConfig.params) === null || _paginationConfig$par15 === void 0 ? void 0 : _paginationConfig$par15.sortBy) && !find(initQueryParams, {\n      name: 'sortBy'\n    })) {\n      initQueryParams.push({\n        name: paginationConfig.params.sortBy.name,\n        label: 'Sort by',\n        value: initialPagination === null || initialPagination === void 0 ? void 0 : initialPagination.sortBy\n      });\n    }\n  }\n\n  return {\n    initQueryParams,\n    initialPagination\n  };\n};\n\nconst PageComp = ({\n  context\n}) => {\n  var _customLabels$buttons, _customLabels$formTit, _customLabels$formTit2, _openedPopup$config;\n\n  const _useParams = useParams(),\n        page = _useParams.page;\n\n  const _useHistory = useHistory(),\n        push = _useHistory.push,\n        location = _useHistory.location;\n\n  const activePage = context.activePage,\n        error = context.error,\n        setError = context.setError,\n        httpService = context.httpService,\n        config = context.config;\n  const pageHeaders = (activePage === null || activePage === void 0 ? void 0 : activePage.requestHeaders) || {};\n  const pageMethods = activePage === null || activePage === void 0 ? void 0 : activePage.methods;\n  const customActions = (activePage === null || activePage === void 0 ? void 0 : activePage.customActions) || [];\n  const getAllConfig = pageMethods === null || pageMethods === void 0 ? void 0 : pageMethods.getAll;\n  const paginationConfig = getAllConfig === null || getAllConfig === void 0 ? void 0 : getAllConfig.pagination;\n  const infiniteScroll = (paginationConfig === null || paginationConfig === void 0 ? void 0 : paginationConfig.type) === 'infinite-scroll';\n  const getSingleConfig = pageMethods === null || pageMethods === void 0 ? void 0 : pageMethods.getSingle;\n  const postConfig = pageMethods === null || pageMethods === void 0 ? void 0 : pageMethods.post;\n  const putConfig = pageMethods === null || pageMethods === void 0 ? void 0 : pageMethods.put;\n  const deleteConfig = pageMethods === null || pageMethods === void 0 ? void 0 : pageMethods.delete;\n\n  const customLabels = _objectSpread({}, config === null || config === void 0 ? void 0 : config.customLabels, {}, activePage === null || activePage === void 0 ? void 0 : activePage.customLabels);\n\n  const addItemLabel = (customLabels === null || customLabels === void 0 ? void 0 : (_customLabels$buttons = customLabels.buttons) === null || _customLabels$buttons === void 0 ? void 0 : _customLabels$buttons.addItem) || '+ Add Item';\n  const addItemFormTitle = (customLabels === null || customLabels === void 0 ? void 0 : (_customLabels$formTit = customLabels.formTitles) === null || _customLabels$formTit === void 0 ? void 0 : _customLabels$formTit.addItem) || 'Add Item';\n  const editItemFormTitle = (customLabels === null || customLabels === void 0 ? void 0 : (_customLabels$formTit2 = customLabels.formTitles) === null || _customLabels$formTit2 === void 0 ? void 0 : _customLabels$formTit2.editItem) || 'Update Item';\n\n  const _buildInitQueryParams = buildInitQueryParamsAndPaginationState((getAllConfig === null || getAllConfig === void 0 ? void 0 : getAllConfig.queryParams) || [], paginationConfig),\n        initQueryParams = _buildInitQueryParams.initQueryParams,\n        initialPagination = _buildInitQueryParams.initialPagination;\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        loading = _useState2[0],\n        setLoading = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        openedPopup = _useState4[0],\n        setOpenedPopup = _useState4[1];\n\n  const _useState5 = useState(initQueryParams),\n        _useState6 = _slicedToArray(_useState5, 2),\n        queryParams = _useState6[0],\n        setQueryParams = _useState6[1];\n\n  const _useState7 = useState(initialPagination),\n        _useState8 = _slicedToArray(_useState7, 2),\n        pagination = _useState8[0],\n        setPagination = _useState8[1];\n\n  const _useState9 = useState([]),\n        _useState10 = _slicedToArray(_useState9, 2),\n        items = _useState10[0],\n        setItems = _useState10[1];\n\n  const _useState11 = useState(''),\n        _useState12 = _slicedToArray(_useState11, 2),\n        filter = _useState12[0],\n        setFilter = _useState12[1];\n\n  function closeFormPopup(refreshData = false) {\n    setOpenedPopup(null);\n\n    if (refreshData === true) {\n      if ((pagination === null || pagination === void 0 ? void 0 : pagination.type) === 'infinite-scroll') {\n        setItems([]);\n        const updatedParams = [...queryParams];\n        remove(updatedParams, param => ['page', 'limit'].includes(param.name));\n        setQueryParams(buildInitQueryParamsAndPaginationState(updatedParams, paginationConfig).initQueryParams);\n      } else {\n        getAllRequest();\n      }\n    }\n  }\n\n  async function openEditPopup(rawData) {\n    const params = {\n      rawData,\n      type: 'update',\n      title: editItemFormTitle,\n      config: putConfig,\n      getSingleConfig,\n      submitCallback: async (body, containFiles) => {\n        return await updateItem(body, rawData, containFiles);\n      }\n    };\n    setOpenedPopup(params);\n  }\n\n  function openCustomActionPopup(rawData, action) {\n    const params = {\n      rawData,\n      type: 'action',\n      title: action.name || 'Custom Action',\n      config: action,\n      submitCallback: async (body, containFiles) => {\n        return await performAction(body, rawData, action, containFiles);\n      }\n    };\n    setOpenedPopup(params);\n  }\n\n  async function performAction(body, rawData, action, containFiles) {\n    const url = action.url,\n          requestHeaders = action.requestHeaders,\n          actualMethod = action.actualMethod;\n    return await httpService.fetch({\n      method: actualMethod || 'put',\n      origUrl: url,\n      rawData,\n      body: containFiles ? body : JSON.stringify(body),\n      headers: _objectSpread({}, pageHeaders, {}, requestHeaders || {}, {}, containFiles ? {} : {\n        'content-type': 'application/json'\n      }),\n      responseType: 'boolean'\n    });\n  }\n\n  function extractQueryParams(params) {\n    const parsedParams = QueryString.parse(location.search);\n    const finalQueryParams = params.map(queryParam => {\n      if (typeof parsedParams[queryParam.name] !== 'undefined') {\n        queryParam.value = queryParam.type === 'boolean' ? parsedParams[queryParam.name] === 'true' : decodeURIComponent(parsedParams[queryParam.name]);\n      } else {\n        queryParam.value = queryParam.value || '';\n      }\n\n      return queryParam;\n    });\n    setPagination(getUpdatedPaginationState(finalQueryParams));\n    return finalQueryParams;\n  }\n\n  async function getAllRequest() {\n    if (infiniteScroll && (pagination === null || pagination === void 0 ? void 0 : pagination.page) !== 1) {\n      setLoading(false);\n    } else {\n      setLoading(true);\n    }\n\n    setError(null);\n\n    try {\n      if (!getAllConfig) {\n        throw new Error('Get all method is not defined.');\n      }\n\n      if (paginationConfig && !pagination) {\n        throw new Error('Pagination not initialized.');\n      }\n\n      const url = getAllConfig.url,\n            requestHeaders = getAllConfig.requestHeaders,\n            actualMethod = getAllConfig.actualMethod,\n            dataPath = getAllConfig.dataPath,\n            sortBy = getAllConfig.sortBy,\n            dataTransform = getAllConfig.dataTransform;\n      const result = await httpService.fetch({\n        method: actualMethod || 'get',\n        origUrl: url,\n        queryParams,\n        headers: Object.assign({}, pageHeaders, requestHeaders || {})\n      });\n      let extractedData = dataHelpers.extractDataByDataPath(result, dataPath);\n\n      if (!extractedData) {\n        throw new Error('Could not extract data from response.');\n      }\n\n      if (!Array.isArray(extractedData)) {\n        throw new Error('Extracted data is invalid.');\n      }\n\n      if (typeof dataTransform === 'function') {\n        extractedData = await dataTransform(extractedData);\n      }\n\n      const orderedItems = orderBy(extractedData, typeof sortBy === 'string' ? [sortBy] : sortBy || []);\n\n      if (paginationConfig) {\n        var _paginationConfig$fie;\n\n        const total = ((_paginationConfig$fie = paginationConfig.fields) === null || _paginationConfig$fie === void 0 ? void 0 : _paginationConfig$fie.total) ? dataHelpers.extractDataByDataPath(result, paginationConfig.fields.total.dataPath) : undefined;\n        const newPaginationState = getUpdatedPaginationState(queryParams, total);\n\n        if (newPaginationState) {\n          setPagination(newPaginationState);\n        }\n      }\n\n      if (infiniteScroll) {\n        setItems([...items, ...orderedItems]);\n      } else {\n        setItems(orderedItems);\n      }\n    } catch (e) {\n      setError(e.message);\n    }\n\n    setLoading(false);\n  }\n\n  async function addItem(body, containFiles) {\n    if (!postConfig) {\n      throw new Error('Post method is not defined.');\n    }\n\n    const url = postConfig.url,\n          requestHeaders = postConfig.requestHeaders,\n          actualMethod = postConfig.actualMethod;\n    return await httpService.fetch({\n      method: actualMethod || 'post',\n      origUrl: url,\n      body: containFiles ? body : JSON.stringify(body),\n      headers: _objectSpread({}, pageHeaders, {}, requestHeaders || {}, {}, containFiles ? {} : {\n        'content-type': 'application/json'\n      }),\n      responseType: 'boolean'\n    });\n  }\n\n  async function updateItem(body, rawData, containFiles) {\n    if (!putConfig) {\n      throw new Error('Put method is not defined.');\n    }\n\n    const url = putConfig.url,\n          requestHeaders = putConfig.requestHeaders,\n          actualMethod = putConfig.actualMethod;\n    return await httpService.fetch({\n      method: actualMethod || 'put',\n      origUrl: url,\n      rawData,\n      body: containFiles ? body : JSON.stringify(body),\n      headers: _objectSpread({}, pageHeaders, {}, requestHeaders || {}, {}, containFiles ? {} : {\n        'content-type': 'application/json'\n      }),\n      responseType: 'boolean'\n    });\n  }\n\n  async function deleteItem(item) {\n    const approved = window.confirm('Are you sure you want to delete this item?');\n\n    if (!approved) {\n      return;\n    }\n\n    try {\n      if (!deleteConfig) {\n        throw new Error('Delete method is not defined.');\n      }\n\n      const url = deleteConfig.url,\n            requestHeaders = deleteConfig.requestHeaders,\n            actualMethod = deleteConfig.actualMethod;\n      const success = await httpService.fetch({\n        method: actualMethod || 'delete',\n        origUrl: url,\n        rawData: item,\n        headers: Object.assign({}, pageHeaders, requestHeaders || {}),\n        responseType: 'boolean'\n      });\n\n      if (success) {\n        if ((pagination === null || pagination === void 0 ? void 0 : pagination.type) === 'infinite-scroll') {\n          setItems([]);\n          const updatedParams = [...queryParams];\n          remove(updatedParams, param => ['page', 'limit'].includes(param.name));\n          setQueryParams(buildInitQueryParamsAndPaginationState(updatedParams, paginationConfig).initQueryParams);\n        } else {\n          getAllRequest();\n        }\n      }\n    } catch (e) {\n      toast.error(e.message);\n    }\n  }\n\n  function submitQueryParams(updatedParams, reset) {\n    if (loading) {\n      return;\n    }\n\n    if (reset) {\n      setItems([]);\n      remove(updatedParams, param => ['page', 'limit'].includes(param.name));\n      updatedParams = buildInitQueryParamsAndPaginationState(updatedParams, paginationConfig).initQueryParams;\n    }\n\n    setQueryParams(updatedParams);\n    setPagination(getUpdatedPaginationState(updatedParams));\n    let paramsToUrl = [...updatedParams];\n\n    if ((paginationConfig === null || paginationConfig === void 0 ? void 0 : paginationConfig.type) === 'infinite-scroll') {\n      paramsToUrl = paramsToUrl.filter(param => !['page', 'limit'].includes(param.name));\n    } // Building query string\n\n\n    const queryState = paramsToUrl.map((queryParam, idx) => {\n      let value = queryParam.value;\n\n      if (queryParam.type === 'select' && value === '-- Select --') {\n        // default value means nothing was selected and thus we explicitly\n        // empty out the value in this case; otherwise the string '-- Select --'\n        // is used as the value for the given queryParams\n        value = '';\n      }\n\n      return `${idx === 0 ? '?' : ''}${queryParam.name}=${encodeURIComponent(value || '')}`;\n    }).join('&'); // Pushing query state to url\n\n    if (page && queryState) {\n      push(queryState);\n    }\n  }\n\n  function getUpdatedPaginationState(updatedParams, total) {\n    var _paginationConfig$par16, _paginationConfig$par17, _paginationConfig$par18, _paginationConfig$par19, _paginationConfig$par20, _paginationConfig$par21, _paginationConfig$par22, _paginationConfig$par23, _updatedParams$find, _updatedParams$find2, _updatedParams$find3, _updatedParams$find4;\n\n    if (!paginationConfig) {\n      return;\n    }\n\n    const newState = pagination ? pagination : {\n      type: paginationConfig.type,\n      page: parseInt(((_paginationConfig$par16 = paginationConfig.params) === null || _paginationConfig$par16 === void 0 ? void 0 : (_paginationConfig$par17 = _paginationConfig$par16.page) === null || _paginationConfig$par17 === void 0 ? void 0 : _paginationConfig$par17.value) || '1'),\n      limit: parseInt(((_paginationConfig$par18 = paginationConfig.params) === null || _paginationConfig$par18 === void 0 ? void 0 : (_paginationConfig$par19 = _paginationConfig$par18.limit) === null || _paginationConfig$par19 === void 0 ? void 0 : _paginationConfig$par19.value) || '10'),\n      descending: ((_paginationConfig$par20 = paginationConfig.params) === null || _paginationConfig$par20 === void 0 ? void 0 : (_paginationConfig$par21 = _paginationConfig$par20.descending) === null || _paginationConfig$par21 === void 0 ? void 0 : _paginationConfig$par21.value) === 'true' || false,\n      hasPreviousPage: false,\n      hasNextPage: false,\n      sortBy: (_paginationConfig$par22 = paginationConfig.params) === null || _paginationConfig$par22 === void 0 ? void 0 : (_paginationConfig$par23 = _paginationConfig$par22.sortBy) === null || _paginationConfig$par23 === void 0 ? void 0 : _paginationConfig$par23.value\n    };\n    newState.total = total || (pagination === null || pagination === void 0 ? void 0 : pagination.total);\n    newState.page = parseInt((_updatedParams$find = updatedParams.find(param => {\n      var _paginationConfig$par24, _paginationConfig$par25;\n\n      return param.name === (paginationConfig === null || paginationConfig === void 0 ? void 0 : (_paginationConfig$par24 = paginationConfig.params) === null || _paginationConfig$par24 === void 0 ? void 0 : (_paginationConfig$par25 = _paginationConfig$par24.page) === null || _paginationConfig$par25 === void 0 ? void 0 : _paginationConfig$par25.name);\n    })) === null || _updatedParams$find === void 0 ? void 0 : _updatedParams$find.value) || newState.page;\n    newState.limit = parseInt((_updatedParams$find2 = updatedParams.find(param => {\n      var _paginationConfig$par26, _paginationConfig$par27;\n\n      return param.name === (paginationConfig === null || paginationConfig === void 0 ? void 0 : (_paginationConfig$par26 = paginationConfig.params) === null || _paginationConfig$par26 === void 0 ? void 0 : (_paginationConfig$par27 = _paginationConfig$par26.limit) === null || _paginationConfig$par27 === void 0 ? void 0 : _paginationConfig$par27.name);\n    })) === null || _updatedParams$find2 === void 0 ? void 0 : _updatedParams$find2.value) || newState.limit;\n    newState.descending = ((_updatedParams$find3 = updatedParams.find(param => {\n      var _paginationConfig$par28, _paginationConfig$par29;\n\n      return param.name === (paginationConfig === null || paginationConfig === void 0 ? void 0 : (_paginationConfig$par28 = paginationConfig.params) === null || _paginationConfig$par28 === void 0 ? void 0 : (_paginationConfig$par29 = _paginationConfig$par28.descending) === null || _paginationConfig$par29 === void 0 ? void 0 : _paginationConfig$par29.name);\n    })) === null || _updatedParams$find3 === void 0 ? void 0 : _updatedParams$find3.value) === 'true' || newState.descending;\n    newState.sortBy = ((_updatedParams$find4 = updatedParams.find(param => {\n      var _paginationConfig$par30, _paginationConfig$par31;\n\n      return param.name === (paginationConfig === null || paginationConfig === void 0 ? void 0 : (_paginationConfig$par30 = paginationConfig.params) === null || _paginationConfig$par30 === void 0 ? void 0 : (_paginationConfig$par31 = _paginationConfig$par30.sortBy) === null || _paginationConfig$par31 === void 0 ? void 0 : _paginationConfig$par31.name);\n    })) === null || _updatedParams$find4 === void 0 ? void 0 : _updatedParams$find4.value) || newState.sortBy;\n    newState.hasPreviousPage = paginationHelpers.hasPreviousPage(newState.page);\n    newState.hasNextPage = paginationHelpers.hasNextPage(newState.page, newState.limit, newState.total);\n    return newState;\n  }\n\n  function renderItemsUI() {\n    var _getAllConfig$display;\n\n    if (loading) {\n      return React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404\n        },\n        __self: this\n      });\n    }\n\n    const fields = (getAllConfig === null || getAllConfig === void 0 ? void 0 : getAllConfig.fields) || (getAllConfig === null || getAllConfig === void 0 ? void 0 : (_getAllConfig$display = getAllConfig.display) === null || _getAllConfig$display === void 0 ? void 0 : _getAllConfig$display.fields) || [];\n    const fieldsToFilter = fields.filter(field => field.filterable).map(field => field.name);\n    let filteredItems = items;\n\n    if (filter && fieldsToFilter.length) {\n      filteredItems = items.filter(item => {\n        let passFilter = false;\n        fieldsToFilter.forEach(fieldName => {\n          const value = item[fieldName];\n\n          if (typeof value === 'string' && value.toLowerCase().indexOf(filter) >= 0) {\n            passFilter = true;\n          }\n        });\n        return passFilter;\n      });\n    }\n\n    if (!filteredItems.length) {\n      return React.createElement(\"div\", {\n        className: \"app-error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425\n        },\n        __self: this\n      }, \"Nothing to see here. Result is empty.\");\n    }\n\n    const getNextPage = paginationConfig ? () => {\n      if ((pagination === null || pagination === void 0 ? void 0 : pagination.page) && queryParams.length > 0) {\n        const newPage = (pagination === null || pagination === void 0 ? void 0 : pagination.page) + 1;\n        const updatedParams = queryParams.map(param => {\n          var _paginationConfig$par32, _paginationConfig$par33;\n\n          if (param.name === ((_paginationConfig$par32 = paginationConfig.params) === null || _paginationConfig$par32 === void 0 ? void 0 : (_paginationConfig$par33 = _paginationConfig$par32.page) === null || _paginationConfig$par33 === void 0 ? void 0 : _paginationConfig$par33.name)) {\n            return _objectSpread({}, param, {\n              value: newPage\n            });\n          }\n\n          return param;\n        });\n        submitQueryParams(updatedParams);\n      }\n    } : null;\n    const getPreviousPage = paginationConfig ? () => {\n      if ((pagination === null || pagination === void 0 ? void 0 : pagination.page) && pagination.page > 1 && queryParams.length > 0) {\n        const newPage = (pagination === null || pagination === void 0 ? void 0 : pagination.page) - 1;\n        const updatedParams = queryParams.map(param => {\n          var _paginationConfig$par34, _paginationConfig$par35;\n\n          if (param.name === ((_paginationConfig$par34 = paginationConfig.params) === null || _paginationConfig$par34 === void 0 ? void 0 : (_paginationConfig$par35 = _paginationConfig$par34.page) === null || _paginationConfig$par35 === void 0 ? void 0 : _paginationConfig$par35.name)) {\n            return _objectSpread({}, param, {\n              value: newPage\n            });\n          }\n\n          return param;\n        });\n        submitQueryParams(updatedParams);\n      }\n    } : null;\n    const callbacks = {\n      delete: deleteConfig ? deleteItem : null,\n      put: putConfig ? openEditPopup : null,\n      action: customActions.length ? openCustomActionPopup : () => {},\n      getNextPage,\n      getPreviousPage\n    };\n\n    if ((getAllConfig === null || getAllConfig === void 0 ? void 0 : getAllConfig.display.type) === 'cards') {\n      return React.createElement(Cards, {\n        pagination: pagination,\n        callbacks: callbacks,\n        fields: fields,\n        items: filteredItems,\n        customActions: customActions,\n        customLabels: customLabels,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Table, {\n      pagination: pagination,\n      callbacks: callbacks,\n      fields: fields,\n      items: filteredItems,\n      customActions: customActions,\n      customLabels: customLabels,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482\n      },\n      __self: this\n    });\n  }\n\n  function renderPaginationStateLabel() {\n    var _customLabels$paginat;\n\n    if (loading || !items.length) {\n      return;\n    }\n\n    const currentCountFrom = (((pagination === null || pagination === void 0 ? void 0 : pagination.page) || 1) - 1) * ((pagination === null || pagination === void 0 ? void 0 : pagination.limit) || 10) + 1;\n    const currentCountTo = currentCountFrom + items.length - 1;\n    let label = `Showing results ${currentCountFrom}-${currentCountTo} out of ${pagination === null || pagination === void 0 ? void 0 : pagination.total} items`;\n\n    if ((pagination === null || pagination === void 0 ? void 0 : pagination.type) === 'infinite-scroll') {\n      label = `Showing ${pagination === null || pagination === void 0 ? void 0 : pagination.total} items`;\n    }\n\n    if (customLabels === null || customLabels === void 0 ? void 0 : (_customLabels$paginat = customLabels.pagination) === null || _customLabels$paginat === void 0 ? void 0 : _customLabels$paginat.itemsCount) {\n      var _customLabels$paginat2;\n\n      label = customLabels === null || customLabels === void 0 ? void 0 : (_customLabels$paginat2 = customLabels.pagination) === null || _customLabels$paginat2 === void 0 ? void 0 : _customLabels$paginat2.itemsCount.replace(':currentCountFrom', currentCountFrom).replace(':currentCountTo', currentCountFrom).replace(':totalCount', pagination === null || pagination === void 0 ? void 0 : pagination.total);\n    }\n\n    return React.createElement(\"p\", {\n      className: \"center pagination-state\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514\n      },\n      __self: this\n    }, label);\n  }\n\n  function renderPageContent() {\n    var _getAllConfig$display2;\n\n    const fields = (getAllConfig === null || getAllConfig === void 0 ? void 0 : getAllConfig.fields) || (getAllConfig === null || getAllConfig === void 0 ? void 0 : (_getAllConfig$display2 = getAllConfig.display) === null || _getAllConfig$display2 === void 0 ? void 0 : _getAllConfig$display2.fields) || [];\n    const fieldsToFilter = fields.filter(field => field.filterable).map(field => field.name);\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525\n      },\n      __self: this\n    }, React.createElement(QueryParams, {\n      initialParams: queryParams,\n      paginationConfig: paginationConfig,\n      submitCallback: submitQueryParams,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526\n      },\n      __self: this\n    }), fieldsToFilter.length > 0 && React.createElement(FilterField, {\n      onChange: setFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533\n      },\n      __self: this\n    }), (pagination === null || pagination === void 0 ? void 0 : pagination.total) && renderPaginationStateLabel(), error ? React.createElement(\"div\", {\n      className: \"app-error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541\n      },\n      __self: this\n    }, error) : renderItemsUI());\n  }\n\n  useEffect(() => {\n    var _context$config, _context$config$pages;\n\n    const nextActivePage = (context === null || context === void 0 ? void 0 : (_context$config = context.config) === null || _context$config === void 0 ? void 0 : (_context$config$pages = _context$config.pages) === null || _context$config$pages === void 0 ? void 0 : _context$config$pages.filter((p, pIdx) => p.id === page || pIdx + 1 === parseInt(page || ''))[0]) || null;\n    context.setActivePage(nextActivePage); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [page]);\n  useEffect(() => {\n    const _buildInitQueryParams2 = buildInitQueryParamsAndPaginationState((getAllConfig === null || getAllConfig === void 0 ? void 0 : getAllConfig.queryParams) || [], paginationConfig),\n          initQueryParams = _buildInitQueryParams2.initQueryParams,\n          initialPagination = _buildInitQueryParams2.initialPagination;\n\n    setItems([]);\n    setQueryParams(extractQueryParams(initQueryParams));\n    setPagination(initialPagination); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [activePage]);\n  useEffect(() => {\n    // Load data when query params \n    getAllRequest(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [queryParams]);\n  return React.createElement(\"div\", {\n    className: \"app-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 570\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"app-page-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 571\n    },\n    __self: this\n  }, React.createElement(\"hgroup\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 572\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 573\n    },\n    __self: this\n  }, activePage === null || activePage === void 0 ? void 0 : activePage.name), (activePage === null || activePage === void 0 ? void 0 : activePage.description) && React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 576\n    },\n    __self: this\n  }, activePage === null || activePage === void 0 ? void 0 : activePage.description)), postConfig && React.createElement(Button, {\n    className: \"add-item\",\n    color: \"green\",\n    onClick: () => setOpenedPopup({\n      type: 'add',\n      title: addItemFormTitle,\n      config: postConfig,\n      submitCallback: addItem\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 581\n    },\n    __self: this\n  }, addItemLabel)), React.createElement(\"main\", {\n    className: \"app-page-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 584\n    },\n    __self: this\n  }, renderPageContent()), openedPopup && React.createElement(FormPopup, {\n    title: openedPopup.title,\n    closeCallback: closeFormPopup,\n    submitCallback: openedPopup.submitCallback,\n    fields: ((_openedPopup$config = openedPopup.config) === null || _openedPopup$config === void 0 ? void 0 : _openedPopup$config.fields) || [],\n    rawData: openedPopup.rawData,\n    getSingleConfig: openedPopup.getSingleConfig,\n    methodConfig: openedPopup.config,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 589\n    },\n    __self: this\n  }));\n};\n\nexport const Page = withAppContext(PageComp);","map":{"version":3,"sources":["/Users/claire/Desktop/covid-trend/RESTool2/src/components/page/page.comp.tsx"],"names":["React","useEffect","useState","useParams","useHistory","QueryString","toast","orderBy","find","remove","withAppContext","Loader","dataHelpers","paginationHelpers","Table","Cards","QueryParams","Button","FormPopup","FilterField","buildInitQueryParamsAndPaginationState","initQueryParams","paginationConfig","initialPagination","type","page","parseInt","params","value","limit","descending","hasPreviousPage","hasNextPage","sortBy","undefined","name","push","label","PageComp","context","location","activePage","error","setError","httpService","config","pageHeaders","requestHeaders","pageMethods","methods","customActions","getAllConfig","getAll","pagination","infiniteScroll","getSingleConfig","getSingle","postConfig","post","putConfig","put","deleteConfig","delete","customLabels","addItemLabel","buttons","addItem","addItemFormTitle","formTitles","editItemFormTitle","editItem","queryParams","loading","setLoading","openedPopup","setOpenedPopup","setQueryParams","setPagination","items","setItems","filter","setFilter","closeFormPopup","refreshData","updatedParams","param","includes","getAllRequest","openEditPopup","rawData","title","submitCallback","body","containFiles","updateItem","openCustomActionPopup","action","performAction","url","actualMethod","fetch","method","origUrl","JSON","stringify","headers","responseType","extractQueryParams","parsedParams","parse","search","finalQueryParams","map","queryParam","decodeURIComponent","getUpdatedPaginationState","Error","dataPath","dataTransform","result","Object","assign","extractedData","extractDataByDataPath","Array","isArray","orderedItems","total","fields","newPaginationState","e","message","deleteItem","item","approved","window","confirm","success","submitQueryParams","reset","paramsToUrl","queryState","idx","encodeURIComponent","join","newState","renderItemsUI","display","fieldsToFilter","field","filterable","filteredItems","length","passFilter","forEach","fieldName","toLowerCase","indexOf","getNextPage","newPage","getPreviousPage","callbacks","renderPaginationStateLabel","currentCountFrom","currentCountTo","itemsCount","replace","renderPageContent","nextActivePage","pages","p","pIdx","id","setActivePage","description","Page"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport * as QueryString from 'query-string';\nimport { toast } from 'react-toastify';\nimport { orderBy } from 'natural-orderby';\nimport { find, remove } from 'lodash';\n\nimport { IAppContext } from '../app.context';\nimport { IConfigPage, IConfigMethods, IConfigGetAllMethod, IConfigPostMethod, IConfigPutMethod, IConfigDeleteMethod, IConfigInputField, IConfigCustomAction, IConfigGetSingleMethod, ICustomLabels, IConfigPagination } from '../../common/models/config.model';\nimport { IPaginationState } from '../../common/models/states.model';\nimport { withAppContext } from '../withContext/withContext.comp';\nimport { Loader } from '../loader/loader.comp';\nimport { dataHelpers } from '../../helpers/data.helpers';\nimport { paginationHelpers } from '../../helpers/pagination.helpers';\nimport { Table } from '../table/table.comp';\nimport { Cards } from '../cards/cards.comp';\nimport { QueryParams } from '../queryParams/queryParams.comp';\nimport { Button } from '../button/button.comp';\nimport { FormPopup } from '../formPopup/formPopup.comp';\nimport { FilterField } from '../filterField/filterField.comp';\n\nimport './page.scss';\n\ninterface IProps {\n  context: IAppContext\n}\n\ninterface IPopupProps {\n  type: 'add' | 'update' | 'action'\n  title: string\n  config: IConfigPostMethod | IConfigPutMethod\n  submitCallback: (body: any, containFiles: boolean) => void\n  getSingleConfig?: IConfigGetSingleMethod\n  rawData?: {}\n}\n\nconst buildInitQueryParamsAndPaginationState = (\n  initQueryParams: IConfigInputField[],\n  paginationConfig?: IConfigPagination,\n): {\n  initQueryParams: IConfigInputField[],\n  initialPagination?: IPaginationState,\n} => {\n  const initialPagination: IPaginationState | undefined = paginationConfig ? {\n    type: paginationConfig.type,\n    page: parseInt(paginationConfig.params?.page?.value || '1'),\n    limit: parseInt(paginationConfig.params?.limit?.value || '10'),\n    descending: paginationConfig.params?.descending?.value === 'true' || false,\n    hasPreviousPage: false,\n    hasNextPage: false,\n    sortBy: paginationConfig.params?.sortBy?.value,\n  } : undefined;\n\n  if (paginationConfig) {\n    if (!find(initQueryParams, { name: 'page' })) {\n      initQueryParams.push({\n        name: paginationConfig?.params?.page?.name,\n        label: paginationConfig?.params?.page?.label || 'Page',\n        value: initialPagination?.page\n      });\n    }\n\n    if (paginationConfig?.params?.limit && !find(initQueryParams, { name: 'limit' })) {\n      initQueryParams.push({\n        name: paginationConfig.params.limit.name,\n        label: paginationConfig.params.limit.label || 'Limit',\n        value: initialPagination?.limit\n      });\n    }\n\n    if (paginationConfig?.params?.descending && !find(initQueryParams, { name: 'descending' })) {\n      initQueryParams.push({\n        name: paginationConfig.params.descending.name,\n        label: paginationConfig.params.descending.label || 'Descending',\n        value: initialPagination?.descending\n      });\n    }\n\n    if (paginationConfig?.params?.sortBy && !find(initQueryParams, { name: 'sortBy' })) {\n      initQueryParams.push({\n        name: paginationConfig.params.sortBy.name,\n        label: 'Sort by',\n        value: initialPagination?.sortBy\n      });\n    }\n  }\n\n  return {\n    initQueryParams,\n    initialPagination\n  };\n};\n\nconst PageComp = ({ context }: IProps) => {\n  const { page } = useParams();\n  const { push, location } = useHistory();\n  const { activePage, error, setError, httpService, config } = context;\n  const pageHeaders: any = activePage?.requestHeaders || {};\n  const pageMethods: IConfigMethods | undefined = activePage?.methods;\n  const customActions: IConfigCustomAction[] = activePage?.customActions || [];\n  const getAllConfig: IConfigGetAllMethod | undefined = pageMethods?.getAll;\n  const paginationConfig = getAllConfig?.pagination;\n  const infiniteScroll = paginationConfig?.type === 'infinite-scroll';\n  const getSingleConfig: IConfigGetSingleMethod | undefined = pageMethods?.getSingle;\n  const postConfig: IConfigPostMethod | undefined = pageMethods?.post;\n  const putConfig: IConfigPutMethod | undefined = pageMethods?.put;\n  const deleteConfig: IConfigDeleteMethod | undefined = pageMethods?.delete;\n  const customLabels: ICustomLabels | undefined = { ...config?.customLabels, ...activePage?.customLabels };\n  const addItemLabel = customLabels?.buttons?.addItem || '+ Add Item';\n  const addItemFormTitle = customLabels?.formTitles?.addItem || 'Add Item';\n  const editItemFormTitle = customLabels?.formTitles?.editItem || 'Update Item';\n  const { initQueryParams, initialPagination } = buildInitQueryParamsAndPaginationState(getAllConfig?.queryParams || [], paginationConfig);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [openedPopup, setOpenedPopup] = useState<null | IPopupProps>(null);\n  const [queryParams, setQueryParams] = useState<IConfigInputField[]>(initQueryParams);\n  const [pagination, setPagination] = useState<IPaginationState | undefined>(initialPagination);\n  const [items, setItems] = useState<any[]>([]);\n  const [filter, setFilter] = useState<string>('');\n\n  function closeFormPopup(refreshData: boolean = false) {\n    setOpenedPopup(null);\n\n    if (refreshData === true) {\n      if (pagination?.type === 'infinite-scroll') {\n        setItems([]);\n        const updatedParams = [...queryParams];\n        remove(updatedParams, param => ['page', 'limit'].includes(param.name));\n        setQueryParams(buildInitQueryParamsAndPaginationState(updatedParams, paginationConfig).initQueryParams);\n      } else {\n        getAllRequest();\n      }\n    }\n  }\n\n  async function openEditPopup(rawData: any) {\n    const params: IPopupProps = {\n      rawData,\n      type: 'update',\n      title: editItemFormTitle,\n      config: putConfig as IConfigPutMethod,\n      getSingleConfig,\n      submitCallback: async (body: any, containFiles: boolean) => {\n        return await updateItem(body, rawData, containFiles);\n      }\n    };\n\n    setOpenedPopup(params);\n  }\n\n  function openCustomActionPopup(rawData: any, action: IConfigCustomAction) {\n    const params: IPopupProps = {\n      rawData,\n      type: 'action',\n      title: action.name || 'Custom Action',\n      config: action as IConfigCustomAction,\n      submitCallback: async (body: any, containFiles: boolean) => {\n        return await performAction(body, rawData, action, containFiles);\n      }\n    };\n\n    setOpenedPopup(params);\n  }\n\n  async function performAction(body: any, rawData: any, action: IConfigCustomAction, containFiles: boolean) {\n    const { url, requestHeaders, actualMethod } = action;\n\n    return await httpService.fetch({\n      method: actualMethod || 'put',\n      origUrl: url,\n      rawData,\n      body: containFiles ? body : JSON.stringify(body),\n      headers: {\n        ...pageHeaders,\n        ...(requestHeaders || {}),\n        ...(containFiles ? {} : { 'content-type': 'application/json' })\n      },\n      responseType: 'boolean'\n    });\n  }\n\n  function extractQueryParams(params: IConfigInputField[]): IConfigInputField[] {\n    const parsedParams = QueryString.parse(location.search);\n    const finalQueryParams = params.map((queryParam) => {\n      if (typeof parsedParams[queryParam.name] !== 'undefined') {\n        queryParam.value = queryParam.type === 'boolean' ? (parsedParams[queryParam.name] === 'true') : decodeURIComponent(parsedParams[queryParam.name] as any);\n      } else {\n        queryParam.value = queryParam.value || '';\n      }\n      return queryParam;\n    });\n\n    setPagination(getUpdatedPaginationState(finalQueryParams))\n\n    return finalQueryParams;\n  }\n\n  async function getAllRequest() {\n    if (infiniteScroll && pagination?.page !== 1) {\n      setLoading(false);\n    } else {\n      setLoading(true);\n    }\n\n    setError(null);\n\n    try {\n      if (!getAllConfig) {\n        throw new Error('Get all method is not defined.');\n      }\n\n      if (paginationConfig && !pagination) {\n        throw new Error('Pagination not initialized.');\n      }\n\n      const { url, requestHeaders, actualMethod, dataPath, sortBy, dataTransform } = getAllConfig;\n      const result = await httpService.fetch({\n        method: actualMethod || 'get',\n        origUrl: url,\n        queryParams,\n        headers: Object.assign({}, pageHeaders, requestHeaders || {})\n      });\n      let extractedData = dataHelpers.extractDataByDataPath(result, dataPath);\n\n      if (!extractedData) {\n        throw new Error('Could not extract data from response.');\n      }\n\n      if (!Array.isArray(extractedData)) {\n        throw new Error('Extracted data is invalid.');\n      }\n\n      if (typeof dataTransform === 'function') {\n        extractedData = await dataTransform(extractedData);\n      }\n\n      const orderedItems = orderBy(extractedData, typeof sortBy === 'string' ? [sortBy] : (sortBy || []));\n\n      if (paginationConfig) {\n        const total = paginationConfig.fields?.total ? dataHelpers.extractDataByDataPath(result, paginationConfig.fields.total.dataPath) : undefined;\n        const newPaginationState = getUpdatedPaginationState(queryParams, total);\n        if (newPaginationState) {\n          setPagination(newPaginationState);\n        }\n      }\n\n      if (infiniteScroll) {\n        setItems([...items, ...orderedItems]);\n      } else {\n        setItems(orderedItems);\n      }\n\n    } catch (e) {\n      setError(e.message);\n    }\n\n    setLoading(false);\n  }\n\n  async function addItem(body: any, containFiles?: boolean) {\n    if (!postConfig) {\n      throw new Error('Post method is not defined.');\n    }\n\n    const { url, requestHeaders, actualMethod } = postConfig;\n\n    return await httpService.fetch({\n      method: actualMethod || 'post',\n      origUrl: url,\n      body: containFiles ? body : JSON.stringify(body),\n      headers: {\n        ...pageHeaders,\n        ...(requestHeaders || {}),\n        ...(containFiles ? {} : { 'content-type': 'application/json' })\n      },\n      responseType: 'boolean'\n    });\n  }\n\n  async function updateItem(body: any, rawData: any, containFiles?: boolean) {\n    if (!putConfig) {\n      throw new Error('Put method is not defined.');\n    }\n\n    const { url, requestHeaders, actualMethod } = putConfig;\n\n    return await httpService.fetch({\n      method: actualMethod || 'put',\n      origUrl: url,\n      rawData,\n      body: containFiles ? body : JSON.stringify(body),\n      headers: {\n        ...pageHeaders,\n        ...(requestHeaders || {}),\n        ...(containFiles ? {} : { 'content-type': 'application/json' })\n      },\n      responseType: 'boolean'\n    });\n  }\n\n  async function deleteItem(item: any) {\n    const approved: boolean = window.confirm('Are you sure you want to delete this item?');\n\n    if (!approved) {\n      return;\n    }\n\n    try {\n      if (!deleteConfig) {\n        throw new Error('Delete method is not defined.');\n      }\n\n      const { url, requestHeaders, actualMethod } = deleteConfig;\n      const success = await httpService.fetch({\n        method: actualMethod || 'delete',\n        origUrl: url,\n        rawData: item,\n        headers: Object.assign({}, pageHeaders, requestHeaders || {}),\n        responseType: 'boolean'\n      });\n\n      if (success) {\n        if (pagination?.type === 'infinite-scroll') {\n          setItems([]);\n          const updatedParams = [...queryParams];\n          remove(updatedParams, param => ['page', 'limit'].includes(param.name));\n          setQueryParams(buildInitQueryParamsAndPaginationState(updatedParams, paginationConfig).initQueryParams);\n        } else {\n          getAllRequest();\n        }\n      }\n    } catch (e) {\n      toast.error(e.message);\n    }\n  }\n\n  function submitQueryParams(updatedParams: IConfigInputField[], reset?: boolean) {\n    if (loading) {\n      return;\n    }\n    \n    if (reset) {\n      setItems([]);\n      remove(updatedParams, param => ['page', 'limit'].includes(param.name));\n      updatedParams = buildInitQueryParamsAndPaginationState(updatedParams, paginationConfig).initQueryParams;\n    }\n\n    setQueryParams(updatedParams);\n    setPagination(getUpdatedPaginationState(updatedParams));\n\n    let paramsToUrl = [...updatedParams];\n\n    if (paginationConfig?.type === 'infinite-scroll') {\n      paramsToUrl = paramsToUrl.filter(param => !['page', 'limit'].includes(param.name));\n    }\n\n    // Building query string\n    const queryState: string = paramsToUrl.map((queryParam, idx) => {\n      let value = queryParam.value;\n\n      if (queryParam.type === 'select' && value === '-- Select --') {\n          // default value means nothing was selected and thus we explicitly\n          // empty out the value in this case; otherwise the string '-- Select --'\n          // is used as the value for the given queryParams\n          value = '';\n      }\n\n      return `${idx === 0 ? '?' : ''}${queryParam.name}=${encodeURIComponent(value || '')}`;\n    }).join('&');\n\n    // Pushing query state to url\n    if (page && queryState) {\n      push(queryState);\n    }\n  }\n\n  function getUpdatedPaginationState(updatedParams: IConfigInputField[], total?: number): IPaginationState | undefined {\n    if (!paginationConfig) {\n      return;\n    }\n\n    const newState: IPaginationState = pagination ? pagination : {\n      type: paginationConfig.type,\n      page: parseInt(paginationConfig.params?.page?.value || '1'),\n      limit: parseInt(paginationConfig.params?.limit?.value || '10'),\n      descending: paginationConfig.params?.descending?.value === 'true' || false,\n      hasPreviousPage: false,\n      hasNextPage: false,\n      sortBy: paginationConfig.params?.sortBy?.value,\n    };\n\n    newState.total = total || pagination?.total;\n    newState.page = parseInt(updatedParams.find(param => param.name === paginationConfig?.params?.page?.name)?.value) || newState.page;\n    newState.limit = parseInt(updatedParams.find(param => param.name === paginationConfig?.params?.limit?.name)?.value) || newState.limit;\n    newState.descending = updatedParams.find(param => param.name === paginationConfig?.params?.descending?.name)?.value === 'true' || newState.descending;\n    newState.sortBy = updatedParams.find(param => param.name === paginationConfig?.params?.sortBy?.name)?.value || newState.sortBy;\n    newState.hasPreviousPage = paginationHelpers.hasPreviousPage(newState.page);\n    newState.hasNextPage = paginationHelpers.hasNextPage(newState.page, newState.limit, newState.total);\n    \n    return newState;\n  }\n\n  function renderItemsUI() {\n    if (loading) {\n      return <Loader />;\n    }\n\n    const fields = getAllConfig?.fields || getAllConfig?.display?.fields || [];\n    const fieldsToFilter = fields.filter((field) => (field.filterable)).map((field) => field.name);\n    let filteredItems = items;\n\n    if (filter && fieldsToFilter.length) {\n      filteredItems = items.filter((item) => {\n        let passFilter = false;\n        fieldsToFilter.forEach((fieldName) => {\n          const value = item[fieldName];\n          if (typeof value === 'string' && value.toLowerCase().indexOf(filter) >= 0) {\n            passFilter = true;\n          }\n        })\n        return passFilter;\n      });\n    }\n\n    if (!filteredItems.length) {\n      return <div className=\"app-error\">Nothing to see here. Result is empty.</div>;\n    }\n\n    const getNextPage = paginationConfig ? () => {\n      if (pagination?.page && queryParams.length > 0) {\n        const newPage = pagination?.page + 1;\n        const updatedParams = queryParams.map((param) => {\n          if (param.name === paginationConfig.params?.page?.name) {\n            return {\n              ...param,\n              value: newPage\n            }\n          }\n          return param;\n        });\n        submitQueryParams(updatedParams);\n      }\n    } : null;\n\n    const getPreviousPage = paginationConfig ? () => {\n      if (pagination?.page && pagination.page > 1 && queryParams.length > 0) {\n        const newPage = pagination?.page - 1;\n        const updatedParams = queryParams.map((param) => {\n          if (param.name === paginationConfig.params?.page?.name) {\n            return {\n              ...param,\n              value: newPage\n            }\n          }\n          return param;\n        });\n        submitQueryParams(updatedParams);\n      }\n    } : null;\n\n    const callbacks = {\n      delete: deleteConfig ? deleteItem : null,\n      put: putConfig ? openEditPopup : null,\n      action: customActions.length ? openCustomActionPopup : () => { },\n      getNextPage,\n      getPreviousPage,\n    };\n\n    if (getAllConfig?.display.type === 'cards') {\n      return (\n        <Cards\n          pagination={pagination}\n          callbacks={callbacks}\n          fields={fields}\n          items={filteredItems}\n          customActions={customActions}\n          customLabels={customLabels}\n        />\n      );\n    }\n\n    return (\n      <Table\n        pagination={pagination}\n        callbacks={callbacks}\n        fields={fields}\n        items={filteredItems}\n        customActions={customActions}\n        customLabels={customLabels}\n      />\n    );\n  }\n\n  function renderPaginationStateLabel() {\n    if (loading || !items.length) {\n      return;\n    }\n\n    const currentCountFrom = (((pagination?.page || 1) - 1) * (pagination?.limit || 10)) + 1;\n    const currentCountTo = currentCountFrom + items.length - 1;\n    let label: string = `Showing results ${currentCountFrom}-${currentCountTo} out of ${pagination?.total} items`;\n\n    if (pagination?.type === 'infinite-scroll') {\n      label = `Showing ${pagination?.total} items`;\n    }\n\n    if (customLabels?.pagination?.itemsCount) {\n      label = customLabels?.pagination?.itemsCount\n              .replace(':currentCountFrom', currentCountFrom as any)\n              .replace(':currentCountTo', currentCountFrom as any)\n              .replace(':totalCount', pagination?.total as any);\n    }\n\n    return (\n      <p className=\"center pagination-state\">\n        {label}\n      </p>\n    );\n  }\n\n  function renderPageContent() {\n    const fields = getAllConfig?.fields || getAllConfig?.display?.fields || [];\n    const fieldsToFilter = fields.filter((field) => (field.filterable)).map((field) => field.name);\n\n    return (\n      <React.Fragment>\n        <QueryParams\n          initialParams={queryParams}\n          paginationConfig={paginationConfig}\n          submitCallback={submitQueryParams}\n        />\n        {\n          fieldsToFilter.length > 0 &&\n          <FilterField onChange={setFilter} />\n        }\n        {\n          pagination?.total &&\n          renderPaginationStateLabel()\n        }\n        {\n          error ?\n          <div className=\"app-error\">{error}</div> :\n          renderItemsUI()\n        }\n      </React.Fragment>\n    )\n  }\n\n  useEffect(() => {\n    const nextActivePage: IConfigPage | null = context?.config?.pages?.filter((p, pIdx) => p.id === page || (pIdx + 1) === parseInt(page || ''))[0] || null;\n    context.setActivePage(nextActivePage);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [page]);\n\n  useEffect(() => {\n    const { initQueryParams, initialPagination } = buildInitQueryParamsAndPaginationState(getAllConfig?.queryParams || [], paginationConfig);\n\n    setItems([]);\n    setQueryParams(extractQueryParams(initQueryParams));\n    setPagination(initialPagination);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [activePage]);\n\n  useEffect(() => {\n    // Load data when query params \n    getAllRequest();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [queryParams]);\n\n  return (\n    <div className=\"app-page\">\n      <header className=\"app-page-header\">\n        <hgroup>\n          <h2>{activePage?.name}</h2>\n          {\n            activePage?.description &&\n            <h4>{activePage?.description}</h4>\n          }\n        </hgroup>\n        {\n          postConfig &&\n          <Button className=\"add-item\" color=\"green\" onClick={() => setOpenedPopup({ type: 'add', title: addItemFormTitle, config: postConfig, submitCallback: addItem })}>{addItemLabel}</Button>\n        }\n      </header>\n      <main className=\"app-page-content\">\n        {renderPageContent()}\n      </main>\n      {\n        openedPopup &&\n        <FormPopup\n          title={openedPopup.title}\n          closeCallback={closeFormPopup}\n          submitCallback={openedPopup.submitCallback}\n          fields={openedPopup.config?.fields || []}\n          rawData={openedPopup.rawData}\n          getSingleConfig={openedPopup.getSingleConfig}\n          methodConfig={openedPopup.config}\n        />\n      }\n    </div>\n  );\n}\n\nexport const Page = withAppContext(PageComp);\n"]},"metadata":{},"sourceType":"module"}