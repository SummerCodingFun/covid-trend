{"ast":null,"code":"class DataHelpers {\n  extractDataByDataPath(data, dataPath, attr = null) {\n    if (!data || !dataPath) {\n      if (attr) {\n        return data[attr];\n      }\n\n      return data;\n    }\n\n    let extractedData = data;\n    const digProps = dataPath.split('.');\n\n    for (let prop of digProps) {\n      if (typeof extractedData[prop] !== 'undefined') {\n        extractedData = extractedData[prop];\n      } else {\n        return null;\n      }\n    }\n\n    if (typeof extractedData === 'undefined') {\n      return null;\n    }\n\n    if (attr) {\n      return extractedData[attr];\n    }\n\n    return extractedData;\n  }\n\n  checkIfFieldIsObject(field) {\n    if (field.type === 'object') {\n      return true;\n    }\n\n    if (field.type === 'array') {\n      if (!field.arrayType || field.arrayType === 'object') {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n}\n\nexport const dataHelpers = new DataHelpers();","map":{"version":3,"sources":["/Users/claire/Desktop/covid-trend/RESTool2/src/helpers/data.helpers.ts"],"names":["DataHelpers","extractDataByDataPath","data","dataPath","attr","extractedData","digProps","split","prop","checkIfFieldIsObject","field","type","arrayType","dataHelpers"],"mappings":"AAEA,MAAMA,WAAN,CAAkB;AAETC,EAAAA,qBAAP,CAA6BC,IAA7B,EAAwCC,QAAxC,EAA0DC,IAAmB,GAAG,IAAhF,EAAsF;AACpF,QAAI,CAACF,IAAD,IAAS,CAACC,QAAd,EAAwB;AACtB,UAAIC,IAAJ,EAAU;AACR,eAAOF,IAAI,CAACE,IAAD,CAAX;AACD;;AACD,aAAOF,IAAP;AACD;;AAED,QAAIG,aAAkB,GAAGH,IAAzB;AACA,UAAMI,QAAkB,GAAGH,QAAQ,CAACI,KAAT,CAAe,GAAf,CAA3B;;AAEA,SAAK,IAAIC,IAAT,IAAiBF,QAAjB,EAA2B;AACzB,UAAI,OAAOD,aAAa,CAACG,IAAD,CAApB,KAA+B,WAAnC,EAAgD;AAC9CH,QAAAA,aAAa,GAAGA,aAAa,CAACG,IAAD,CAA7B;AACD,OAFD,MAEO;AACL,eAAO,IAAP;AACD;AACF;;AAED,QAAI,OAAOH,aAAP,KAAyB,WAA7B,EAA0C;AACxC,aAAO,IAAP;AACD;;AAED,QAAID,IAAJ,EAAU;AACR,aAAOC,aAAa,CAACD,IAAD,CAApB;AACD;;AAED,WAAOC,aAAP;AACD;;AAEMI,EAAAA,oBAAP,CAA4BC,KAA5B,EAA+D;AAC7D,QAAIA,KAAK,CAACC,IAAN,KAAe,QAAnB,EAA6B;AAC3B,aAAO,IAAP;AACD;;AAED,QAAID,KAAK,CAACC,IAAN,KAAe,OAAnB,EAA4B;AAC1B,UAAI,CAACD,KAAK,CAACE,SAAP,IAAoBF,KAAK,CAACE,SAAN,KAAoB,QAA5C,EAAsD;AACpD,eAAO,IAAP;AACD;AACF;;AAED,WAAO,KAAP;AACD;;AA5Ce;;AAgDlB,OAAO,MAAMC,WAAW,GAAG,IAAIb,WAAJ,EAApB","sourcesContent":["import { IConfigInputField } from \"../common/models/config.model\";\n\nclass DataHelpers {\n\n  public extractDataByDataPath(data: any, dataPath: string, attr: string | null = null) {\n    if (!data || !dataPath) {\n      if (attr) {\n        return data[attr];\n      }\n      return data;\n    }\n\t\n    let extractedData: any = data;\n    const digProps: string[] = dataPath.split('.');\n\n    for (let prop of digProps) {\n      if (typeof extractedData[prop] !== 'undefined') {\n        extractedData = extractedData[prop];\n      } else {\n        return null;\n      }\n    }\n\n    if (typeof extractedData === 'undefined') {\n      return null;\n    }\n\n    if (attr) {\n      return extractedData[attr];\n    }\n\n    return extractedData;\n  }\n\n  public checkIfFieldIsObject(field: IConfigInputField): boolean {\n    if (field.type === 'object') {\n      return true;\n    }\n\n    if (field.type === 'array') {\n      if (!field.arrayType || field.arrayType === 'object') {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n}\n\nexport const dataHelpers = new DataHelpers();"]},"metadata":{},"sourceType":"module"}