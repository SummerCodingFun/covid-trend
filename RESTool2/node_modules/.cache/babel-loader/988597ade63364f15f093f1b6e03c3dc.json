{"ast":null,"code":"import _regeneratorRuntime from\"/Users/claire/RESTool/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _classCallCheck from\"/Users/claire/RESTool/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/claire/RESTool/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import{dataHelpers}from'../helpers/data.helpers';var HttpService=/*#__PURE__*/function(){function HttpService(){var baseUrl=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';var unauthorizedRedirectUrl=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'';var errorMessageDataPath=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'';_classCallCheck(this,HttpService);this.baseUrl=void 0;this.unauthorizedRedirectUrl=void 0;this.errorMessageDataPath=void 0;this.requestHeaders=void 0;this.baseUrl=baseUrl||'';this.unauthorizedRedirectUrl=unauthorizedRedirectUrl||'';this.errorMessageDataPath=errorMessageDataPath||'';this.requestHeaders={};}_createClass(HttpService,[{key:\"urlIsAbsolute\",value:function urlIsAbsolute(url){if(url.indexOf('http')===0||url.indexOf('https')===0){return true;}return false;}},{key:\"replaceParamsInUrl\",value:function replaceParamsInUrl(url,rawData){if(!rawData||typeof rawData!=='object'){return url;}var outputUrl=url;Object.keys(rawData).forEach(function(key){var urlParamName=\":\".concat(key);outputUrl=outputUrl.replace(urlParamName,rawData[key]);});return outputUrl;}},{key:\"buildUrl\",value:function buildUrl(url){var queryParams=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];var rawData=arguments.length>2?arguments[2]:undefined;if(!queryParams||!queryParams.length){return this.replaceParamsInUrl(url,rawData);}var outputUrl=url;var params=[];var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=queryParams[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var param=_step.value;if(!param.name||typeof param.value==='undefined'){continue;}// TODO: Add docs to \"urlReplaceOnly\"\nif(param.urlReplaceOnly){var urlParamName=\":\".concat(param.name);outputUrl=outputUrl.replace(urlParamName,param.value);}else{params.push(\"\".concat(param.name,\"=\").concat(param.value||''));}}}catch(err){_didIteratorError=true;_iteratorError=err;}finally{try{if(!_iteratorNormalCompletion&&_iterator.return!=null){_iterator.return();}}finally{if(_didIteratorError){throw _iteratorError;}}}if(params.length){var firstSeparator=url.indexOf('?')>=0?'&':'?';return outputUrl+firstSeparator+params.join('&');}return outputUrl;}},{key:\"buildRequest\",value:function buildRequest(params){var reqUrl=this.urlIsAbsolute(params.origUrl)?params.origUrl:this.baseUrl+params.origUrl;var finalUrl=this.buildUrl(reqUrl,params.queryParams,params.rawData);var requestParams={method:params.method?params.method.toUpperCase():'GET',headers:Object.assign({},this.requestHeaders,params.headers||{}),body:params.method==='post'||params.method==='put'||params.method==='patch'?params.body:undefined};return{url:finalUrl,params:requestParams};}},{key:\"getErrorMessage\",value:function getErrorMessage(res){var errorMessage,body,_iteratorNormalCompletion2,_didIteratorError2,_iteratorError2,_iterator2,_step2,path,dataAtPath;return _regeneratorRuntime.async(function getErrorMessage$(_context){while(1){switch(_context.prev=_context.next){case 0:errorMessage='';_context.prev=1;_context.next=4;return _regeneratorRuntime.awrap(res.json());case 4:body=_context.sent;_iteratorNormalCompletion2=true;_didIteratorError2=false;_iteratorError2=undefined;_context.prev=8;for(_iterator2=this.errorMessageDataPath[Symbol.iterator]();!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=true){path=_step2.value;dataAtPath=dataHelpers.extractDataByDataPath(body,path);if(dataAtPath){errorMessage=dataAtPath;}}_context.next=16;break;case 12:_context.prev=12;_context.t0=_context[\"catch\"](8);_didIteratorError2=true;_iteratorError2=_context.t0;case 16:_context.prev=16;_context.prev=17;if(!_iteratorNormalCompletion2&&_iterator2.return!=null){_iterator2.return();}case 19:_context.prev=19;if(!_didIteratorError2){_context.next=22;break;}throw _iteratorError2;case 22:return _context.finish(19);case 23:return _context.finish(16);case 24:_context.next=28;break;case 26:_context.prev=26;_context.t1=_context[\"catch\"](1);case 28:return _context.abrupt(\"return\",errorMessage&&errorMessage.length?errorMessage:\"\".concat(res.status,\" - \").concat(res.statusText||''));case 29:case\"end\":return _context.stop();}}},null,this,[[1,26],[8,12,16,24],[17,,19,23]]);}},{key:\"handleError\",value:function handleError(res){var redirectUrl;return _regeneratorRuntime.async(function handleError$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!(res.status===401&&this.unauthorizedRedirectUrl)){_context2.next=4;break;}redirectUrl=this.unauthorizedRedirectUrl.replace(':returnUrl',encodeURIComponent(document.location.href));document.location.href=redirectUrl;return _context2.abrupt(\"return\");case 4:_context2.t0=Error;_context2.next=7;return _regeneratorRuntime.awrap(this.getErrorMessage(res));case 7:_context2.t1=_context2.sent;throw new _context2.t0(_context2.t1);case 9:case\"end\":return _context2.stop();}}},null,this);}},{key:\"makeRequest\",value:function makeRequest(url){var params,responseType,res,_args3=arguments;return _regeneratorRuntime.async(function makeRequest$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:params=_args3.length>1&&_args3[1]!==undefined?_args3[1]:{};responseType=_args3.length>2&&_args3[2]!==undefined?_args3[2]:'json';_context3.next=4;return _regeneratorRuntime.awrap(fetch(url,Object.assign({},params,{})));case 4:res=_context3.sent;if(!res.ok){_context3.next=17;break;}_context3.t0=responseType;_context3.next=_context3.t0==='json'?9:_context3.t0==='text'?12:_context3.t0==='boolean'?15:16;break;case 9:_context3.next=11;return _regeneratorRuntime.awrap(res.json());case 11:return _context3.abrupt(\"return\",_context3.sent);case 12:_context3.next=14;return _regeneratorRuntime.awrap(res.text());case 14:return _context3.abrupt(\"return\",_context3.sent);case 15:return _context3.abrupt(\"return\",true);case 16:return _context3.abrupt(\"return\",true);case 17:_context3.next=19;return _regeneratorRuntime.awrap(this.handleError(res));case 19:case\"end\":return _context3.stop();}}},null,this);}},{key:\"fetch\",value:function fetch(_ref){var method,origUrl,queryParams,rawData,body,headers,responseType,_this$buildRequest,url,params;return _regeneratorRuntime.async(function fetch$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:method=_ref.method,origUrl=_ref.origUrl,queryParams=_ref.queryParams,rawData=_ref.rawData,body=_ref.body,headers=_ref.headers,responseType=_ref.responseType;_this$buildRequest=this.buildRequest({method:method,origUrl:origUrl,queryParams:queryParams,rawData:rawData,body:body,headers:headers}),url=_this$buildRequest.url,params=_this$buildRequest.params;_context4.next=4;return _regeneratorRuntime.awrap(this.makeRequest(url,params,responseType));case 4:return _context4.abrupt(\"return\",_context4.sent);case 5:case\"end\":return _context4.stop();}}},null,this);}}]);return HttpService;}();export default HttpService;","map":{"version":3,"sources":["/Users/claire/RESTool/src/services/http.service.ts"],"names":["dataHelpers","HttpService","baseUrl","unauthorizedRedirectUrl","errorMessageDataPath","requestHeaders","url","indexOf","rawData","outputUrl","Object","keys","forEach","key","urlParamName","replace","queryParams","length","replaceParamsInUrl","params","param","name","value","urlReplaceOnly","push","firstSeparator","join","reqUrl","urlIsAbsolute","origUrl","finalUrl","buildUrl","requestParams","method","toUpperCase","headers","assign","body","undefined","res","errorMessage","json","path","dataAtPath","extractDataByDataPath","status","statusText","redirectUrl","encodeURIComponent","document","location","href","Error","getErrorMessage","responseType","fetch","ok","text","handleError","buildRequest","makeRequest"],"mappings":"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","sourcesContent":["import { TConfigMethod, IQueryParam } from '../common/models/config.model';\nimport { dataHelpers } from '../helpers/data.helpers';\n\nexport type ResponseType = 'json' | 'text' | 'boolean' | 'status';\n\nexport interface IFetchParams {\n  origUrl: string\n  method?: TConfigMethod\n  headers?: any\n  queryParams?: IQueryParam[]\n  rawData?: any\n  body?: any\n  responseType?: ResponseType\n}\n\nclass HttpService {\n  public baseUrl: string;\n  public unauthorizedRedirectUrl: string;\n  public errorMessageDataPath: string | string[];\n  public requestHeaders: any;\n\n  constructor(baseUrl: string = '', unauthorizedRedirectUrl: string = '', errorMessageDataPath: string = '') {\n    this.baseUrl = baseUrl || '';\n    this.unauthorizedRedirectUrl = unauthorizedRedirectUrl || '';\n    this.errorMessageDataPath = errorMessageDataPath || '';\n    this.requestHeaders = {};\n  }\n\n  private urlIsAbsolute(url: string) {\n    if (url.indexOf('http') === 0 || url.indexOf('https') === 0) {\n      return true;\n    }\n    return false;\n  }\n\n  private replaceParamsInUrl(url: string, rawData?: any): string {\n    if (!rawData || typeof rawData !== 'object') {\n      return url;\n    }\n\n    let outputUrl = url;\n\n    Object.keys(rawData).forEach((key) => {\n      const urlParamName = `:${key}`;\n      outputUrl = outputUrl.replace(urlParamName, rawData[key] as string);\n    });\n\n    return outputUrl;\n  }\n\n  private buildUrl(url: string, queryParams: IQueryParam[] = [], rawData?: any): string {\n    if (!queryParams || !queryParams.length) {\n      return this.replaceParamsInUrl(url, rawData);\n    }\n\n    let outputUrl = url;\n    const params = [];\n\n    for (let param of queryParams) {\n      if (!param.name || typeof param.value === 'undefined') {\n        continue;\n      }\n\n      // TODO: Add docs to \"urlReplaceOnly\"\n      if (param.urlReplaceOnly) {\n        const urlParamName = `:${param.name}`;\n        outputUrl = outputUrl.replace(urlParamName, param.value as string);\n      } else {\n        params.push(`${param.name}=${param.value || ''}`);\n      }\n    }\n\n    if (params.length) {\n      const firstSeparator = url.indexOf('?') >= 0 ? '&' : '?';\n      return outputUrl + firstSeparator + params.join('&');\n    }\n\n    return outputUrl;\n  }\n\n  private buildRequest(params: IFetchParams): { url: string, params: any } {\n    const reqUrl: string = this.urlIsAbsolute(params.origUrl) ? params.origUrl : this.baseUrl + params.origUrl;\n    const finalUrl: string = this.buildUrl(reqUrl, params.queryParams, params.rawData);\n    const requestParams = {\n      method: params.method ? params.method.toUpperCase() : 'GET',\n      headers: Object.assign({}, this.requestHeaders, params.headers || {}),\n      body: params.method === 'post' || params.method === 'put' || params.method === 'patch' ? params.body : undefined\n    };\n\n    return {\n      url: finalUrl,\n      params: requestParams\n    };\n  }\n\n  private async getErrorMessage(res: Response | any): Promise<string> {\n    let errorMessage: string = '';\n\n    try {\n      const body = await res.json();\n\n      for (const path of this.errorMessageDataPath) {\n        const dataAtPath = dataHelpers.extractDataByDataPath(body, path);\n\n        if (dataAtPath) {\n          errorMessage = dataAtPath;\n        }\n      }\n    } catch { } // TODO: proper handling of errors (^.^)\n\n    return errorMessage && errorMessage.length ?\n      errorMessage :\n      `${res.status} - ${res.statusText || ''}`;\n  }\n\n  private async handleError(res: Response) {\n    // In case response status is \"Unauthorized\", redirect to relevant url\n    if (res.status === 401 && this.unauthorizedRedirectUrl) {\n      const redirectUrl: string = this.unauthorizedRedirectUrl.replace(':returnUrl', encodeURIComponent(document.location.href));\n      document.location.href = redirectUrl;\n      return;\n    }\n\n    throw new Error(await this.getErrorMessage(res));\n  }\n\n  private async makeRequest(url: string, params: any = {}, responseType: ResponseType = 'json') {\n    const res: Response = await fetch(url, Object.assign({}, params, {}));\n\n    if (res.ok) {\n      switch (responseType) {\n        case 'json':\n          return await res.json();\n        case 'text':\n          return await res.text();\n        case 'boolean':\n          return true;\n        default:\n          return true;\n      }\n    }\n\n    await this.handleError(res);\n  }\n\n  public async fetch({ method, origUrl, queryParams, rawData, body, headers, responseType }: IFetchParams) {\n    const { url, params } = this.buildRequest({ method, origUrl, queryParams, rawData, body, headers });\n    return await this.makeRequest(url, params, responseType);\n  }\n}\n\nexport default HttpService;\n"]},"metadata":{},"sourceType":"module"}