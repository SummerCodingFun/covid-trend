{"ast":null,"code":"import _slicedToArray from \"/Users/claire/RESTool/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/claire/RESTool/src/components/navigation/navigation.comp.tsx\";\nimport React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { withAppContext } from '../withContext/withContext.comp';\nimport { Button } from '../button/button.comp';\nimport './navigation.scss';\n\nconst NavigationComp = ({\n  context: {\n    config\n  }\n}) => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isOpened = _useState2[0],\n        setIsOpened = _useState2[1];\n\n  return React.createElement(\"nav\", {\n    className: \"app-nav\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: \"app-nav-opener\",\n    onClick: () => setIsOpened(!isOpened),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, isOpened ? React.createElement(\"i\", {\n    className: \"fa fa-times\",\n    \"aria-hidden\": \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }) : React.createElement(\"i\", {\n    className: \"fa fa-bars\",\n    \"aria-hidden\": \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: `app-nav-wrapper ${isOpened ? 'opened' : ''}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"app-nav-links\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, ((config === null || config === void 0 ? void 0 : config.pages) || []).map((page, idx) => React.createElement(NavLink, {\n    to: `/${page.id || idx + 1}`,\n    activeClassName: \"active\",\n    key: `page_${idx}`,\n    onClick: () => setIsOpened(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, page.name)))));\n};\n\nexport const Navigation = withAppContext(NavigationComp);","map":{"version":3,"sources":["/Users/claire/RESTool/src/components/navigation/navigation.comp.tsx"],"names":["React","useState","NavLink","withAppContext","Button","NavigationComp","context","config","isOpened","setIsOpened","pages","map","page","idx","id","name","Navigation"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,kBAAxB;AAGA,SAASC,cAAT,QAA+B,iCAA/B;AACA,SAASC,MAAT,QAAuB,uBAAvB;AAEA,OAAO,mBAAP;;AAMA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA;AAAF;AAAX,CAAD,KAAqC;AAAA,oBAC1BN,QAAQ,CAAU,KAAV,CADkB;AAAA;AAAA,QACnDO,QADmD;AAAA,QACzCC,WADyC;;AAG1D,SACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,gBAAlB;AAAmC,IAAA,OAAO,EAAE,MAAMA,WAAW,CAAC,CAACD,QAAF,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIA,QAAQ,GACR;AAAG,IAAA,SAAS,EAAC,aAAb;AAA2B,mBAAY,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADQ,GAER;AAAG,IAAA,SAAS,EAAC,YAAb;AAA0B,mBAAY,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADF,EASE;AAAK,IAAA,SAAS,EAAG,mBAAkBA,QAAQ,GAAG,QAAH,GAAc,EAAG,EAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,CAAC,CAAAD,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEG,KAAR,KAAiB,EAAlB,EAAsBC,GAAtB,CAA0B,CAACC,IAAD,EAAOC,GAAP,KACxB,oBAAC,OAAD;AAAS,IAAA,EAAE,EAAG,IAAGD,IAAI,CAACE,EAAL,IAAWD,GAAG,GAAG,CAAE,EAApC;AAAuC,IAAA,eAAe,EAAC,QAAvD;AAAgE,IAAA,GAAG,EAAG,QAAOA,GAAI,EAAjF;AAAoF,IAAA,OAAO,EAAE,MAAMJ,WAAW,CAAC,KAAD,CAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwHG,IAAI,CAACG,IAA7H,CADF,CAFJ,CADF,CATF,CADF;AAqBD,CAxBD;;AA0BA,OAAO,MAAMC,UAAU,GAAGb,cAAc,CAACE,cAAD,CAAjC","sourcesContent":["import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { IAppContext } from '../app.context';\nimport { withAppContext } from '../withContext/withContext.comp';\nimport { Button } from '../button/button.comp';\n\nimport './navigation.scss';\n\ninterface IProps {\n  context: IAppContext\n}\n\nconst NavigationComp = ({ context: { config } }: IProps) => {\n  const [isOpened, setIsOpened] = useState<boolean>(false);\n\n  return (\n    <nav className=\"app-nav\">\n      <Button className=\"app-nav-opener\" onClick={() => setIsOpened(!isOpened)}>\n        {\n          isOpened ? \n          <i className=\"fa fa-times\" aria-hidden=\"true\"></i> : \n          <i className=\"fa fa-bars\" aria-hidden=\"true\"></i>\n        }\n      </Button>\n\n      <div className={`app-nav-wrapper ${isOpened ? 'opened' : ''}`}>\n        <div className=\"app-nav-links\">\n          {\n            (config?.pages || []).map((page, idx) => (\n              <NavLink to={`/${page.id || idx + 1}`} activeClassName=\"active\" key={`page_${idx}`} onClick={() => setIsOpened(false)}>{page.name}</NavLink>\n            ))\n          }\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport const Navigation = withAppContext(NavigationComp);"]},"metadata":{},"sourceType":"module"}