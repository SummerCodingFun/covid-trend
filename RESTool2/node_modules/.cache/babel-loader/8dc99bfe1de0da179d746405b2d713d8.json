{"ast":null,"code":"import _toConsumableArray from\"/Users/claire/RESTool/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"/Users/claire/RESTool/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _defineProperty from\"/Users/claire/RESTool/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/claire/RESTool/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/claire/RESTool/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{orderBy}from'natural-orderby';import{toast}from'react-toastify';import{Button}from'../button/button.comp';import{withAppContext}from'../withContext/withContext.comp';import{dataHelpers}from'../../helpers/data.helpers';import'./formRow.scss';export var FormRow=withAppContext(function(_ref){var _customLabels$buttons,_customLabels$buttons2;var context=_ref.context,field=_ref.field,direction=_ref.direction,showReset=_ref.showReset,onChange=_ref.onChange;var _useState=useState({}),_useState2=_slicedToArray(_useState,2),optionSources=_useState2[0],setOptionSources=_useState2[1];var httpService=context.httpService,activePage=context.activePage,config=context.config;var pageHeaders=(activePage===null||activePage===void 0?void 0:activePage.requestHeaders)||{};var customLabels=_objectSpread({},config===null||config===void 0?void 0:config.customLabels,{},activePage===null||activePage===void 0?void 0:activePage.customLabels);var addArrayItemLabel=(customLabels===null||customLabels===void 0?void 0:(_customLabels$buttons=customLabels.buttons)===null||_customLabels$buttons===void 0?void 0:_customLabels$buttons.addArrayItem)||'Add Item';var clearLabel=(customLabels===null||customLabels===void 0?void 0:(_customLabels$buttons2=customLabels.buttons)===null||_customLabels$buttons2===void 0?void 0:_customLabels$buttons2.clearInput)||'Clear';function loadOptionSourceFromRemote(fieldName,optionSource){var url,dataPath,actualMethod,requestHeaders,result,extractedData,optionSourceData;return _regeneratorRuntime.async(function loadOptionSourceFromRemote$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;url=optionSource.url,dataPath=optionSource.dataPath,actualMethod=optionSource.actualMethod,requestHeaders=optionSource.requestHeaders;if(url){_context.next=4;break;}throw new Error(\"URL option source (for field \\\"\".concat(fieldName,\"\\\") is empty.\"));case 4:_context.next=6;return _regeneratorRuntime.awrap(httpService.fetch({method:actualMethod||'get',origUrl:url,queryParams:[],headers:Object.assign({},pageHeaders,requestHeaders||{})}));case 6:result=_context.sent;extractedData=dataHelpers.extractDataByDataPath(result,dataPath);if(!(!extractedData||!extractedData.length)){_context.next=10;break;}throw new Error(\"Option source data is empty (for field \\\"\".concat(fieldName,\"\\\")\"));case 10:// Map option source to fields\noptionSourceData=extractedData.map(function(option,idx){var valuePath=optionSource.valuePath,displayPath=optionSource.displayPath;if(typeof option==='string'){return option;}return{display:displayPath&&option[displayPath]?option[displayPath]:\"Option \".concat(idx+1),value:valuePath&&option[valuePath]?option[valuePath]:\"\".concat(idx)};});setOptionSources(_objectSpread({},optionSources,_defineProperty({},fieldName,optionSourceData)));_context.next=17;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](0);toast.error(_context.t0.message);case 17:case\"end\":return _context.stop();}}},null,null,[[0,14]]);}function addItemToFieldArray(e,originalField){e.preventDefault();onChange(field.name,[].concat(_toConsumableArray(originalField.value||[]),['']));}function removeItemToFieldArray(originalField,idx){var updatedArray=_toConsumableArray(originalField.value||[]);updatedArray.splice(idx,1);onChange(field.name,updatedArray);}function renderArrayItems(originalField){var array=originalField.value||[];return React.createElement(\"div\",{className:\"array-form\"},array.map(function(item,itemIdx){var inputField=renderFieldInput({value:item,name:\"\".concat(originalField.name,\".\").concat(itemIdx)},function(fieldName,value){var updatedArray=(originalField.value||[]).map(function(localValue,idx){if(idx===itemIdx){return value;}return localValue;});onChange(originalField.name,updatedArray);});return React.createElement(\"div\",{className:\"array-form-item\",key:\"array_form_\".concat(itemIdx)},inputField,React.createElement(\"i\",{title:clearLabel,onClick:function onClick(){return removeItemToFieldArray(originalField,itemIdx);},\"aria-label\":\"Remove\",className:\"clear-input fa fa-times\"}));}),React.createElement(Button,{className:\"add-array-item\",onClick:function onClick(e){return addItemToFieldArray(e,originalField);},title:addArrayItemLabel},React.createElement(\"i\",{className:\"fa fa-plus\",\"aria-hidden\":\"true\"})));}function renderFieldInput(field,changeCallback){var _customLabels$placeho,_customLabels$placeho3,_customLabels$placeho4,_customLabels$placeho5,_customLabels$placeho6,_customLabels$placeho7,_customLabels$placeho8,_customLabels$placeho9,_customLabels$placeho10;var inputProps=function inputProps(){var defaultPlaceholder=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';return{value:field.value,placeholder:field.placeholder||defaultPlaceholder,disabled:field.readonly,required:field.required,onChange:function onChange(e){return changeCallback(field.name,e.target.value);}};};switch(field.type){case'boolean':return React.createElement(\"input\",Object.assign({type:\"checkbox\"},inputProps(),{checked:field.value,onChange:function onChange(e){return changeCallback(field.name,e.target.checked,true);}}));case'select':{var _field$optionSource;var optionSource=field.optionSource;if(optionSource&&!optionSources[field.name]){loadOptionSourceFromRemote(field.name,optionSource);return React.createElement(\"select\",inputProps(),React.createElement(\"option\",null,\"-- Loading Options... --\"));}var sortBy=(_field$optionSource=field.optionSource)===null||_field$optionSource===void 0?void 0:_field$optionSource.sortBy;var finalOptions=optionSources[field.name]||field.options||[];var sortedOptions=orderBy(finalOptions,typeof sortBy==='string'?[sortBy]:sortBy||[]);return React.createElement(\"select\",inputProps(),React.createElement(\"option\",null,\"-- Select --\"),sortedOptions.map(function(option,idx){var key=\"option_\".concat(idx,\"_\");if(typeof option!=='object'){return React.createElement(\"option\",{key:\"\".concat(key,\"_\").concat(option),value:option},option);}return React.createElement(\"option\",{key:\"\".concat(key,\"_\").concat(option.value),value:option.value},option.display||option.value);}));};case'object':return React.createElement(\"textarea\",inputProps((customLabels===null||customLabels===void 0?void 0:(_customLabels$placeho=customLabels.placeholders)===null||_customLabels$placeho===void 0?void 0:_customLabels$placeho.object)||'Enter JSON...'));case'array':{var arrayType=field.arrayType,_value=field.value;if(!_value||!arrayType||arrayType==='object'){var _customLabels$placeho2;return React.createElement(\"textarea\",inputProps((customLabels===null||customLabels===void 0?void 0:(_customLabels$placeho2=customLabels.placeholders)===null||_customLabels$placeho2===void 0?void 0:_customLabels$placeho2.array)||'Enter JSON array...'));}return renderArrayItems(field);}case'long-text':return React.createElement(\"textarea\",inputProps((customLabels===null||customLabels===void 0?void 0:(_customLabels$placeho3=customLabels.placeholders)===null||_customLabels$placeho3===void 0?void 0:_customLabels$placeho3.text)||'Enter text...'));case'number':case'integer':return React.createElement(\"input\",Object.assign({type:\"number\"},inputProps((customLabels===null||customLabels===void 0?void 0:(_customLabels$placeho4=customLabels.placeholders)===null||_customLabels$placeho4===void 0?void 0:_customLabels$placeho4.number)||'0'),{onChange:function onChange(e){return changeCallback(field.name,e.target.valueAsNumber);}}));case'color':return React.createElement(\"input\",Object.assign({type:\"color\"},inputProps((customLabels===null||customLabels===void 0?void 0:(_customLabels$placeho5=customLabels.placeholders)===null||_customLabels$placeho5===void 0?void 0:_customLabels$placeho5.color)||'Enter color...')));case'email':return React.createElement(\"input\",Object.assign({type:\"email\"},inputProps((customLabels===null||customLabels===void 0?void 0:(_customLabels$placeho6=customLabels.placeholders)===null||_customLabels$placeho6===void 0?void 0:_customLabels$placeho6.email)||'Enter email...')));case'password':return React.createElement(\"input\",Object.assign({type:\"password\"},inputProps((customLabels===null||customLabels===void 0?void 0:(_customLabels$placeho7=customLabels.placeholders)===null||_customLabels$placeho7===void 0?void 0:_customLabels$placeho7.password)||'Enter password...')));case'hidden':return React.createElement(\"input\",{type:\"hidden\",value:field.value});case'file':return React.createElement(\"input\",{type:\"file\",accept:field.accept||'*',placeholder:field.placeholder||(customLabels===null||customLabels===void 0?void 0:(_customLabels$placeho8=customLabels.placeholders)===null||_customLabels$placeho8===void 0?void 0:_customLabels$placeho8.file)||'Select file...',name:field.name||'file',disabled:field.readonly,required:field.required});case'note':return React.createElement(\"p\",{className:\"note\"},field.value);case'date':return React.createElement(\"input\",Object.assign({type:\"date\"},inputProps((customLabels===null||customLabels===void 0?void 0:(_customLabels$placeho9=customLabels.placeholders)===null||_customLabels$placeho9===void 0?void 0:_customLabels$placeho9.date)||'Enter date...')));case'text':default:return React.createElement(\"input\",Object.assign({type:\"text\"},inputProps((customLabels===null||customLabels===void 0?void 0:(_customLabels$placeho10=customLabels.placeholders)===null||_customLabels$placeho10===void 0?void 0:_customLabels$placeho10.text)||'Enter text...')));}}return React.createElement(\"div\",{className:\"form-row \".concat(direction||'row')},field.type!=='hidden'&&React.createElement(\"label\",null,field.label||field.originalName,field.required?' *':''),renderFieldInput(field,onChange),showReset&&!field.readonly&&field.value&&field.value.length>0&&React.createElement(\"i\",{title:clearLabel,onClick:function onClick(){return onChange(field.name,'',true);},\"aria-label\":\"Clear\",className:\"clear-input fa fa-times\"}));});","map":{"version":3,"sources":["/Users/claire/RESTool/src/components/formRow/formRow.comp.tsx"],"names":["React","useState","orderBy","toast","Button","withAppContext","dataHelpers","FormRow","context","field","direction","showReset","onChange","optionSources","setOptionSources","httpService","activePage","config","pageHeaders","requestHeaders","customLabels","addArrayItemLabel","buttons","addArrayItem","clearLabel","clearInput","loadOptionSourceFromRemote","fieldName","optionSource","url","dataPath","actualMethod","Error","fetch","method","origUrl","queryParams","headers","Object","assign","result","extractedData","extractDataByDataPath","length","optionSourceData","map","option","idx","valuePath","displayPath","display","value","error","message","addItemToFieldArray","e","originalField","preventDefault","name","removeItemToFieldArray","updatedArray","splice","renderArrayItems","array","item","itemIdx","inputField","renderFieldInput","localValue","changeCallback","inputProps","defaultPlaceholder","placeholder","disabled","readonly","required","target","type","checked","sortBy","finalOptions","options","sortedOptions","key","placeholders","object","arrayType","text","number","valueAsNumber","color","email","password","accept","file","date","label","originalName"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { orderBy } from 'natural-orderby';\nimport { toast } from 'react-toastify';\n\nimport { IConfigInputField, IConfigOptionSource, ICustomLabels } from '../../common/models/config.model';\nimport { Button } from '../button/button.comp';\nimport { withAppContext } from '../withContext/withContext.comp';\nimport { IAppContext } from '../app.context';\nimport { dataHelpers } from '../../helpers/data.helpers';\n\nimport './formRow.scss';\n\ninterface IProps {\n  context: IAppContext\n  field: IConfigInputField\n  onChange: (fieldName: string, value: any, submitAfterChange?: boolean) => void\n  showReset?: boolean\n  direction?: 'row' | 'column'\n}\n\nexport const FormRow = withAppContext(({ context, field, direction, showReset, onChange }: IProps) => {\n  const [optionSources, setOptionSources] = useState<any>({});\n  const { httpService, activePage, config } = context;\n  const pageHeaders: any = activePage?.requestHeaders || {};\n  const customLabels: ICustomLabels | undefined = { ...config?.customLabels, ...activePage?.customLabels };\n  const addArrayItemLabel = customLabels?.buttons?.addArrayItem || 'Add Item';\n  const clearLabel = customLabels?.buttons?.clearInput || 'Clear';\n\n  async function loadOptionSourceFromRemote(fieldName: string, optionSource: IConfigOptionSource) {\n    try {\n      const { url, dataPath, actualMethod, requestHeaders } = optionSource;\n\n      if (!url) {\n        throw new Error(`URL option source (for field \"${fieldName}\") is empty.`);\n      }\n\n      const result = await httpService.fetch({\n        method: actualMethod || 'get',\n        origUrl: url,\n        queryParams: [],\n        headers: Object.assign({}, pageHeaders, requestHeaders || {}),\n      });\n\n      const extractedData = dataHelpers.extractDataByDataPath(result, dataPath);\n\n      if (!extractedData || !extractedData.length) {\n        throw new Error(`Option source data is empty (for field \"${fieldName}\")`);\n      }\n\n      // Map option source to fields\n      const optionSourceData = extractedData.map((option: any, idx: number) => {\n        const { valuePath, displayPath } = optionSource;\n\n        if (typeof option === 'string') {\n          return option;\n        }\n\n        return {\n          display: displayPath && option[displayPath] ? option[displayPath] : `Option ${idx + 1}`,\n          value: valuePath && option[valuePath] ? option[valuePath] : `${idx}`,\n        };\n      });\n\n      setOptionSources({\n        ...optionSources,\n        [fieldName]: optionSourceData\n      });\n    } catch (e) {\n      toast.error(e.message);\n    }\n  }\n\n  function addItemToFieldArray(e: any, originalField: IConfigInputField) {\n    e.preventDefault();\n\n    onChange(field.name, [\n      ...(originalField.value || []),\n      ''\n    ]);\n  }\n\n  function removeItemToFieldArray(originalField: IConfigInputField, idx: number) {\n    const updatedArray = [\n      ...(originalField.value || [])\n    ];\n\n    updatedArray.splice(idx, 1);\n\n    onChange(field.name, updatedArray);\n  }\n\n  function renderArrayItems(originalField: IConfigInputField) {\n    const array: any[] = originalField.value || [];\n\n    return (\n      <div className=\"array-form\">\n        {\n          array.map((item, itemIdx) => {\n            const inputField = renderFieldInput({\n              value: item,\n              name: `${originalField.name}.${itemIdx}`,\n            } as IConfigInputField, (fieldName, value) => {\n              const updatedArray = (originalField.value || []).map((localValue: any, idx: number) => {\n                if (idx === itemIdx) {\n                  return value;\n                }\n                return localValue;\n              });\n\n              onChange(originalField.name, updatedArray);\n            });\n\n            return (\n              <div className=\"array-form-item\" key={`array_form_${itemIdx}`}>\n                {inputField}\n                <i title={clearLabel} onClick={() => removeItemToFieldArray(originalField, itemIdx)} aria-label=\"Remove\" className=\"clear-input fa fa-times\"></i>\n              </div>\n            )\n          })\n        }\n        <Button className=\"add-array-item\" onClick={(e) => addItemToFieldArray(e, originalField)} title={addArrayItemLabel}>\n          <i className=\"fa fa-plus\" aria-hidden=\"true\"></i>\n        </Button>\n      </div>\n    );\n  }\n\n  function renderFieldInput(field: IConfigInputField, changeCallback: (fieldName: string, value: any, submitAfterChange?: boolean) => void) {\n    const inputProps = (defaultPlaceholder: string = '') => {\n      return {\n        value: field.value,\n        placeholder: field.placeholder || defaultPlaceholder,\n        disabled: field.readonly,\n        required: field.required,\n        onChange: (e: any) => changeCallback(field.name, e.target.value),\n      };\n    };\n\n    switch (field.type) {\n      case 'boolean':\n        return <input type=\"checkbox\" {...inputProps()} checked={field.value} onChange={(e) => changeCallback(field.name, e.target.checked, true)} />;\n      case 'select':\n        {\n          const { optionSource } = field;\n\n          if (optionSource && !optionSources[field.name]) {\n            loadOptionSourceFromRemote(field.name, optionSource);\n            return <select {...inputProps()}><option>-- Loading Options... --</option></select>\n          }\n\n          const sortBy = field.optionSource?.sortBy;\n          const finalOptions: { value: string, display: string }[] = optionSources[field.name] || field.options || [];\n          const sortedOptions = orderBy(finalOptions, typeof sortBy === 'string' ? [sortBy] : (sortBy || []));\n\n          return (\n            <select {...inputProps()}>\n              <option>-- Select --</option>\n              {\n                sortedOptions.map((option, idx) => {\n                  const key = `option_${idx}_`;\n                  if (typeof option !== 'object') {\n                    return <option key={`${key}_${option}`} value={option}>{option}</option>\n                  }\n                  return <option key={`${key}_${option.value}`} value={option.value}>{option.display || option.value}</option>\n                })\n              }\n            </select>\n          );\n        };\n      case 'object':\n        return <textarea {...inputProps(customLabels?.placeholders?.object || 'Enter JSON...')}></textarea>;\n      case 'array': {\n        const { arrayType, value } = field;\n        if (!value || !arrayType || arrayType === 'object') {\n          return <textarea {...inputProps(customLabels?.placeholders?.array || 'Enter JSON array...')}></textarea>;\n        }\n        return renderArrayItems(field);\n      }\n      case 'long-text':\n        return <textarea {...inputProps(customLabels?.placeholders?.text || 'Enter text...')}></textarea>;\n      case 'number':\n      case 'integer':\n        return <input type=\"number\" {...inputProps(customLabels?.placeholders?.number || '0')} onChange={(e) => changeCallback(field.name, e.target.valueAsNumber)} />;\n      case 'color':\n        return <input type=\"color\" {...inputProps(customLabels?.placeholders?.color || 'Enter color...')} />;\n      case 'email':\n        return <input type=\"email\" {...inputProps(customLabels?.placeholders?.email || 'Enter email...')} />;\n      case 'password':\n        return <input type=\"password\" {...inputProps(customLabels?.placeholders?.password || 'Enter password...')} />;\n      case 'hidden':\n        return <input type=\"hidden\" value={field.value} />;\n      case 'file':\n        return <input type=\"file\" accept={field.accept || '*'} placeholder={field.placeholder || customLabels?.placeholders?.file || 'Select file...'} name={field.name || 'file'} disabled={field.readonly} required={field.required} />;\n      case 'note':\n        return <p className=\"note\">{field.value}</p>;\n      case 'date':\n        return <input type=\"date\" {...inputProps(customLabels?.placeholders?.date || 'Enter date...')} />;\n      case 'text':\n      default:\n        return <input type=\"text\" {...inputProps(customLabels?.placeholders?.text || 'Enter text...')} />;\n    }\n  }\n\n  return (\n    <div className={`form-row ${direction || 'row'}`}>\n      {\n        field.type !== 'hidden' &&\n        <label>{field.label || field.originalName}{field.required ? ' *' : ''}</label>\n      }\n      {renderFieldInput(field, onChange)}\n      {\n        (showReset && !field.readonly && field.value && field.value.length > 0) &&\n        <i title={clearLabel} onClick={() => onChange(field.name, '', true)} aria-label=\"Clear\" className=\"clear-input fa fa-times\"></i>\n      }\n    </div>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}