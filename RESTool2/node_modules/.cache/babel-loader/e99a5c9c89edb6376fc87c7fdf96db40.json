{"ast":null,"code":"var _jsxFileName = \"/Users/claire/Desktop/covid-trend/RESTool-113487f63b750b2e4555b0d53ca076377e9eeff0/src/components/cards/cards.comp.tsx\";\nimport React, { useEffect } from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport Skeleton from 'react-loading-skeleton';\nimport { dataHelpers } from '../../helpers/data.helpers';\nimport { Button } from '../button/button.comp';\nimport { Pagination } from '../pagination/pagination.comp';\nimport './cards.scss';\nexport const Cards = ({\n  items,\n  fields,\n  callbacks,\n  customActions,\n  customLabels,\n  pagination\n}) => {\n  var _customLabels$buttons, _customLabels$buttons2;\n\n  const editLabel = (customLabels === null || customLabels === void 0 ? void 0 : (_customLabels$buttons = customLabels.buttons) === null || _customLabels$buttons === void 0 ? void 0 : _customLabels$buttons.editItem) || 'Edit';\n  const deleteLabel = (customLabels === null || customLabels === void 0 ? void 0 : (_customLabels$buttons2 = customLabels.buttons) === null || _customLabels$buttons2 === void 0 ? void 0 : _customLabels$buttons2.deleteItem) || 'Delete';\n  const paginationCallbacks = {\n    nextPage: callbacks.getNextPage || (() => {\n      return;\n    }),\n    previousPage: callbacks.getPreviousPage || (() => {\n      return;\n    })\n  };\n\n  function renderRow(origField, origItem, value) {\n    if (origField.type === 'boolean') {\n      value = value ? true : false;\n    }\n\n    if (value && typeof value === 'object') {\n      return 'object';\n    }\n\n    switch (origField.type) {\n      case 'text':\n        return React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, value);\n\n      case 'boolean':\n        return React.createElement(\"div\", {\n          className: `bool ${value ? 'true' : 'false'}`,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        });\n\n      case 'image':\n        if (!value) {\n          return React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          });\n        }\n\n        return React.createElement(\"img\", {\n          src: value || '',\n          alt: value || origField.label || origField.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        });\n\n      case 'url':\n        let url = origField.url || value || ''; // Replace all url vars\n\n        fields.forEach(field => {\n          const fieldValue = dataHelpers.extractDataByDataPath(origItem, field.dataPath, field.name);\n          url = url.replace(`:${field.name}`, fieldValue);\n        });\n        return React.createElement(\"a\", {\n          href: url,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, origField.urlLabel || value);\n\n      case 'colorbox':\n        return React.createElement(\"div\", {\n          className: \"colorbox\",\n          style: {\n            backgroundColor: value\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        });\n\n      default:\n        return value;\n    }\n  }\n\n  function renderActions(item, cardIdx) {\n    return React.createElement(\"div\", {\n      className: \"actions-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, callbacks.put && React.createElement(Button, {\n      onClick: () => {\n        var _callbacks$put;\n\n        return (_callbacks$put = callbacks.put) === null || _callbacks$put === void 0 ? void 0 : _callbacks$put.call(callbacks, item);\n      },\n      title: editLabel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-pencil-square-o\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), customActions && customActions.length > 0 && customActions.map((action, idx) => React.createElement(Button, {\n      key: `action_${cardIdx}_${idx}`,\n      onClick: () => callbacks.action(item, action),\n      title: action.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: `fa fa-${action.icon || 'cogs'}`,\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }))), callbacks.delete && React.createElement(Button, {\n      onClick: () => {\n        var _callbacks$delete;\n\n        return (_callbacks$delete = callbacks.delete) === null || _callbacks$delete === void 0 ? void 0 : _callbacks$delete.call(callbacks, item);\n      },\n      title: deleteLabel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-times\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })));\n  }\n\n  function renderCard(item, cardIdx) {\n    return React.createElement(\"div\", {\n      className: \"card\",\n      key: `card_${cardIdx}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, fields.map((field, fieldIdx) => {\n      const value = dataHelpers.extractDataByDataPath(item, field.dataPath, field.name);\n      return React.createElement(\"div\", {\n        className: `card-row ${field.type}`,\n        key: `card_${cardIdx}_${fieldIdx}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, field.type !== 'image' && React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, field.label || field.name, \": \"), renderRow(field, item, value));\n    }), renderActions(item, cardIdx));\n  }\n\n  function renderCardSkeleton(cardIdx) {\n    return React.createElement(\"div\", {\n      className: \"card\",\n      key: `card_${cardIdx}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, fields.map((field, fieldIdx) => {\n      return React.createElement(\"div\", {\n        className: `card-row ${field.type}`,\n        key: `card_${cardIdx}_${fieldIdx}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, field.type !== 'image' && React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, field.label || field.name, \": \"), React.createElement(Skeleton, {\n        duration: 0.6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }));\n    }), renderActions({}, cardIdx));\n  }\n\n  function renderSkeletons() {\n    const startingIndex = items.length;\n    const skeletonsIndexes = Array.from(Array(pagination === null || pagination === void 0 ? void 0 : pagination.limit).keys()).map(value => value + startingIndex);\n    return skeletonsIndexes.map(renderCardSkeleton);\n  }\n\n  useEffect(() => {\n    if ((pagination === null || pagination === void 0 ? void 0 : pagination.type) === 'infinite-scroll' && document.body.clientHeight <= window.innerHeight && callbacks.getNextPage && (pagination === null || pagination === void 0 ? void 0 : pagination.hasNextPage)) {\n      callbacks.getNextPage();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, []);\n\n  if ((pagination === null || pagination === void 0 ? void 0 : pagination.type) === 'infinite-scroll') {\n    return React.createElement(InfiniteScroll, {\n      className: \"cards-wrapper\",\n      dataLength: items.length,\n      next: callbacks.getNextPage || (() => null),\n      hasMore: (pagination === null || pagination === void 0 ? void 0 : pagination.hasNextPage) || false,\n      loader: renderSkeletons(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, items.map(renderCard));\n  }\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cards-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, items.map(renderCard)), pagination && pagination.type === 'buttons' && React.createElement(Pagination, {\n    callbacks: paginationCallbacks,\n    pagination: pagination,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["/Users/claire/Desktop/covid-trend/RESTool-113487f63b750b2e4555b0d53ca076377e9eeff0/src/components/cards/cards.comp.tsx"],"names":["React","useEffect","InfiniteScroll","Skeleton","dataHelpers","Button","Pagination","Cards","items","fields","callbacks","customActions","customLabels","pagination","editLabel","buttons","editItem","deleteLabel","deleteItem","paginationCallbacks","nextPage","getNextPage","previousPage","getPreviousPage","renderRow","origField","origItem","value","type","label","name","url","forEach","field","fieldValue","extractDataByDataPath","dataPath","replace","urlLabel","backgroundColor","renderActions","item","cardIdx","put","length","map","action","idx","icon","delete","renderCard","fieldIdx","renderCardSkeleton","renderSkeletons","startingIndex","skeletonsIndexes","Array","from","limit","keys","document","body","clientHeight","window","innerHeight","hasNextPage"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport Skeleton from 'react-loading-skeleton';\n\nimport { IConfigDisplayField, IConfigCustomAction, ICustomLabels } from '../../common/models/config.model';\nimport { IPaginationState } from '../../common/models/states.model';\nimport { dataHelpers } from '../../helpers/data.helpers';\nimport { Button } from '../button/button.comp';\nimport { Pagination } from '../pagination/pagination.comp';\n\nimport './cards.scss';\n\ninterface IProps {\n  items: any[]\n  pagination?: IPaginationState\n  callbacks: {\n    delete: ((item: any) => void) | null\n    put: ((item: any) => void) | null\n    action: (item: any, action: IConfigCustomAction) => void\n    getNextPage: (() => void) | null\n    getPreviousPage: (() => void) | null\n  }\n  fields: IConfigDisplayField[]\n  customActions?: IConfigCustomAction[]\n  customLabels?: ICustomLabels\n}\n\nexport const Cards = ({ items, fields, callbacks, customActions, customLabels, pagination }: IProps) => {\n  const editLabel: string = customLabels?.buttons?.editItem || 'Edit';\n  const deleteLabel: string = customLabels?.buttons?.deleteItem || 'Delete';\n  const paginationCallbacks = {\n    nextPage: callbacks.getNextPage || (() => { return; }),\n    previousPage: callbacks.getPreviousPage || (() => { return; }),\n  };\n\n  function renderRow(origField: IConfigDisplayField, origItem: any, value: any) {\n    if (origField.type === 'boolean') {\n      value = value ? true : false;\n    }\n\n    if (value && typeof value === 'object') {\n      return 'object';\n    }\n\n    switch (origField.type) {\n      case 'text':\n        return <span>{value}</span>;\n      case 'boolean':\n        return <div className={`bool ${value ? 'true' : 'false'}`}></div>;\n      case 'image':\n        if (!value) {\n          return <React.Fragment></React.Fragment>;\n        }\n        return <img src={value || ''} alt={value || origField.label || origField.name} />;\n      case 'url':\n        let url: string = origField.url || value || '';\n\n        // Replace all url vars\n        fields.forEach((field) => {\n          const fieldValue = dataHelpers.extractDataByDataPath(origItem, field.dataPath, field.name);\n          url = url.replace(`:${field.name}`, fieldValue);\n        });\n\n        return <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">{origField.urlLabel || value}</a>;\n      case 'colorbox':\n        return <div className=\"colorbox\" style={{ backgroundColor: value }}></div>;\n      default:\n        return value;\n    }\n  }\n\n  function renderActions(item: any, cardIdx: number) {\n    return (\n      <div className=\"actions-wrapper\">\n        {\n          callbacks.put &&\n          <Button onClick={() => callbacks.put?.(item)} title={editLabel}>\n            <i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i>\n          </Button>\n        }\n        {\n          (customActions && customActions.length > 0) &&\n          customActions.map((action, idx) => (\n            <Button key={`action_${cardIdx}_${idx}`} onClick={() => callbacks.action(item, action)} title={action.name}>\n              <i className={`fa fa-${action.icon || 'cogs'}`} aria-hidden=\"true\"></i>\n            </Button>\n          ))\n        }\n        {\n          callbacks.delete &&\n          <Button onClick={() => callbacks.delete?.(item)} title={deleteLabel}>\n            <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n          </Button>\n        }\n      </div>\n    );\n  }\n\n  function renderCard(item: any, cardIdx: number) {\n    return (\n      <div className=\"card\" key={`card_${cardIdx}`}>\n        {\n          fields.map((field, fieldIdx) => {\n            const value = dataHelpers.extractDataByDataPath(item, field.dataPath, field.name);\n            return (\n              <div className={`card-row ${field.type}`} key={`card_${cardIdx}_${fieldIdx}`}>\n                {\n                  field.type !== 'image' &&\n                  <label>{field.label || field.name}: </label>\n                }\n                {renderRow(field, item, value)}\n              </div>\n            );\n          })\n        }\n        {renderActions(item, cardIdx)}\n      </div>\n    );\n  }\n\n  function renderCardSkeleton(cardIdx: number) {\n    return (\n      <div className=\"card\" key={`card_${cardIdx}`}>\n        {\n          fields.map((field, fieldIdx) => {\n            return (\n              <div className={`card-row ${field.type}`} key={`card_${cardIdx}_${fieldIdx}`}>\n                {\n                  field.type !== 'image' &&\n                  <label>{field.label || field.name}: </label>\n                }\n                <Skeleton duration={0.6} />\n              </div>\n            );\n          })\n        }\n        {renderActions({}, cardIdx)}\n      </div>\n    );\n  }\n\n  function renderSkeletons() {\n    const startingIndex = items.length;\n    const skeletonsIndexes = Array.from(Array(pagination?.limit).keys()).map(value => value + startingIndex);\n    return skeletonsIndexes.map(renderCardSkeleton);\n  }\n\n  useEffect(() => {\n    if (\n      pagination?.type === 'infinite-scroll'\n      && document.body.clientHeight <= window.innerHeight\n      && callbacks.getNextPage\n      && pagination?.hasNextPage\n    ) {\n      callbacks.getNextPage();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (pagination?.type === 'infinite-scroll') {\n    return (\n      <InfiniteScroll className=\"cards-wrapper\"\n        dataLength={items.length}\n        next={callbacks.getNextPage || (() => null)}\n        hasMore={pagination?.hasNextPage || false}\n        loader={renderSkeletons()}\n      >\n        {items.map(renderCard)}\n      </InfiniteScroll>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"cards-wrapper\">\n        {items.map(renderCard)}\n      </div>\n      {\n        pagination &&\n        pagination.type === 'buttons' &&\n        <Pagination\n          callbacks={paginationCallbacks}\n          pagination={pagination}\n        ></Pagination>\n      }\n    </React.Fragment>\n  )\n}"]},"metadata":{},"sourceType":"module"}