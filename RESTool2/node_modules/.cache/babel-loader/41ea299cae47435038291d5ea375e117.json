{"ast":null,"code":"import React from'react';import HttpService from'../services/http.service';export var AppContext=React.createContext({config:null,activePage:null,error:null,setError:function setError(){},setActivePage:function setActivePage(){},httpService:new HttpService()});","map":{"version":3,"sources":["/Users/claire/RESTool/src/components/app.context.ts"],"names":["React","HttpService","AppContext","createContext","config","activePage","error","setError","setActivePage","httpService"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,WAAP,KAAwB,0BAAxB,CAWA,MAAO,IAAMC,CAAAA,UAAU,CAAGF,KAAK,CAACG,aAAN,CAAiC,CACzDC,MAAM,CAAE,IADiD,CAEzDC,UAAU,CAAE,IAF6C,CAGzDC,KAAK,CAAE,IAHkD,CAIzDC,QAAQ,CAAE,mBAAM,CAAE,CAJuC,CAKzDC,aAAa,CAAE,wBAAM,CAAE,CALkC,CAMzDC,WAAW,CAAE,GAAIR,CAAAA,WAAJ,EAN4C,CAAjC,CAAnB","sourcesContent":["import React from 'react';\nimport { IConfig, IConfigPage } from '../common/models/config.model';\nimport HttpService from '../services/http.service';\n\nexport interface IAppContext {\n  config: IConfig | null\n  activePage: IConfigPage | null\n  error: string | null\n  setError: (error: string | null) => void\n  setActivePage: (activePage: IConfigPage | null) => void\n  httpService: HttpService\n}\n\nexport const AppContext = React.createContext<IAppContext>({\n  config: null,\n  activePage: null,\n  error: null,\n  setError: () => {},\n  setActivePage: () => {},\n  httpService: new HttpService()\n});"]},"metadata":{},"sourceType":"module"}