{"ast":null,"code":"class FileHelpers {\n  isMultipartForm(fields) {\n    for (const fieldIndex in fields) {\n      let field = fields[fieldIndex];\n\n      if (field.type === 'file') {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n}\n\nexport const fileHelpers = new FileHelpers();","map":{"version":3,"sources":["/Users/claire/Desktop/covid-trend/RESTool2/src/helpers/file.helpers.ts"],"names":["FileHelpers","isMultipartForm","fields","fieldIndex","field","type","fileHelpers"],"mappings":"AAEA,MAAMA,WAAN,CAAkB;AAETC,EAAAA,eAAP,CAAuBC,MAAvB,EAA6D;AAC3D,SAAK,MAAMC,UAAX,IAAyBD,MAAzB,EAAiC;AAC/B,UAAIE,KAAK,GAAGF,MAAM,CAACC,UAAD,CAAlB;;AAEA,UAAIC,KAAK,CAACC,IAAN,KAAe,MAAnB,EAA2B;AACzB,eAAO,IAAP;AACD;AACF;;AAED,WAAO,KAAP;AACD;;AAZe;;AAiBlB,OAAO,MAAMC,WAAW,GAAG,IAAIN,WAAJ,EAApB","sourcesContent":["import { IConfigInputField } from '../common/models/config.model';\n\nclass FileHelpers {\n\n  public isMultipartForm(fields: IConfigInputField[]): boolean {\n    for (const fieldIndex in fields) {\n      let field = fields[fieldIndex];\n\n      if (field.type === 'file') {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  \n}\n\nexport const fileHelpers = new FileHelpers();"]},"metadata":{},"sourceType":"module"}